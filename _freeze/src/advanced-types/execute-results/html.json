{
  "hash": "ebc4f893ca17f2fcf7354fe0b2284b03",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Advanced Types and Error Handling in Julia\"\npage-layout: article\njupyter: julia-1.11\n---\n\n\n\nIn this section, we will delve into some of the more advanced features of Julia's type system and error handling. We will explore the hierarchical structure of types, how to define and work with parametric types, as well as how to handle type conversions and promotions. Additionally, we will look at how to manage errors in Julia, including common error types and exception handling mechanisms.\n\nBy the end of this page, you'll have a deeper understanding of Julia's flexible and powerful type system, which is essential for writing efficient, type-safe code. We will also cover how to manage and handle errors gracefully to ensure that your programs run smoothly.\n\nTopics Covered:\n\n- **Type Hierarchies**: Understanding Julia's abstract and concrete types.\n- **Type Annotations and Declarations**: How to specify types in functions and variables.\n- **Parametric Types**: Creating generic types and functions.\n- **Type Conversion and Promotion**: Working with different types and converting between them.\n- **Union Types**: Handling multiple types in a single variable.\n- **Special Types**: Working with `Nothing`, `Any`, and `Missing`.\n- **Errors and Exception Handling**: Raising and handling errors with `try`/`catch` blocks.\n\n## Type Hierarchies\n\nIn Julia, types are organized into a hierarchy with `Any` as the root. At the top, `Any` is the most general type, and all other types are subtypes of `Any`. The type hierarchy enables Julia to provide flexibility while supporting efficient dispatch based on types.\n\n::: {#71d24c79 .cell execution_count=2}\n``` {.julia .cell-code}\nusing GraphRecipes, Plots\ndefault(size=(800, 800))\n@suppress_err begin #| hide\nplot(AbstractFloat, fontsize=10, nodeshape=:rect, nodesize=0.08)\nend #| hide\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"800\" height=\"800\" viewBox=\"0 0 3200 3200\">\n<defs>\n  <clipPath id=\"clip220\">\n    <rect x=\"0\" y=\"0\" width=\"3200\" height=\"3200\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip220)\" d=\"M0 3200 L3200 3200 L3200 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip221\">\n    <rect x=\"640\" y=\"319\" width=\"2241\" height=\"2241\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip220)\" d=\"M47.2441 3152.76 L3152.76 3152.76 L3152.76 47.2441 L47.2441 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip222\">\n    <rect x=\"47\" y=\"47\" width=\"3107\" height=\"3107\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,490.889 1600,508.292 1600,526.064 1600,544.177 1600,562.604 1600,581.317 1600,600.29 1600,619.494 1600,638.904 1600,658.49 1600,678.227 1600,698.086 1600,718.041 1600,738.064 1600,758.128 1600,778.205 1600,798.269 1600,818.292 1600,838.247 1600,858.106 1600,877.843 1600,897.429 1600,916.839 1600,936.043 1600,955.016 1600,973.729 1600,992.156 1600,1010.27 1600,1028.04 1600,1045.44 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,1045.44 1600,1062.85 1600,1080.62 1600,1098.73 1600,1117.16 1600,1135.87 1600,1154.85 1600,1174.05 1600,1193.46 1600,1213.05 1600,1232.78 1600,1252.64 1600,1272.6 1600,1292.62 1600,1312.68 1600,1332.76 1600,1352.82 1600,1372.85 1600,1392.8 1600,1412.66 1600,1432.4 1600,1451.99 1600,1471.39 1600,1490.6 1600,1509.57 1600,1528.28 1600,1546.71 1600,1564.82 1600,1582.6 1600,1600 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,1600 1600,1617.4 1600,1635.18 1600,1653.29 1600,1671.72 1600,1690.43 1600,1709.4 1600,1728.61 1600,1748.01 1600,1767.6 1600,1787.34 1600,1807.2 1600,1827.15 1600,1847.18 1600,1867.24 1600,1887.32 1600,1907.38 1600,1927.4 1600,1947.36 1600,1967.22 1600,1986.95 1600,2006.54 1600,2025.95 1600,2045.15 1600,2064.13 1600,2082.84 1600,2101.27 1600,2119.38 1600,2137.15 1600,2154.56 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,2154.56 1596.13,2182.27 1584.9,2208.15 1566.85,2232.32 1542.52,2254.92 1512.46,2276.09 1477.22,2295.96 1437.33,2314.68 1393.36,2332.37 1345.84,2349.17 1295.31,2365.22 1242.33,2380.66 1187.44,2395.62 1131.19,2410.24 1074.12,2424.66 1016.77,2439.01 959.7,2453.42 903.446,2468.04 848.556,2483.01 795.577,2498.44 745.053,2514.5 697.531,2531.3 653.556,2548.99 613.674,2567.7 578.43,2587.58 548.37,2608.75 524.041,2631.35 505.987,2655.52 494.754,2681.39 490.889,2709.11 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,2154.56 1598.07,2178.37 1592.45,2201.17 1583.42,2223.05 1571.26,2244.07 1556.23,2264.31 1538.61,2283.84 1518.67,2302.74 1496.68,2321.08 1472.92,2338.94 1447.66,2356.39 1421.17,2373.5 1393.72,2390.35 1365.59,2407.02 1337.06,2423.57 1308.39,2440.09 1279.85,2456.65 1251.72,2473.31 1224.28,2490.17 1197.79,2507.28 1172.53,2524.73 1148.77,2542.58 1126.78,2560.92 1106.84,2579.82 1089.21,2599.36 1074.19,2619.6 1062.02,2640.62 1052.99,2662.49 1047.38,2685.3 1045.44,2709.11 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,2154.56 1600,2171.96 1600,2189.73 1600,2207.84 1600,2226.27 1600,2244.98 1600,2263.96 1600,2283.16 1600,2302.57 1600,2322.16 1600,2341.89 1600,2361.75 1600,2381.71 1600,2401.73 1600,2421.79 1600,2441.87 1600,2461.94 1600,2481.96 1600,2501.91 1600,2521.77 1600,2541.51 1600,2561.1 1600,2580.51 1600,2599.71 1600,2618.68 1600,2637.4 1600,2655.82 1600,2673.94 1600,2691.71 1600,2709.11 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,2154.56 1601.93,2178.37 1607.55,2201.17 1616.58,2223.05 1628.74,2244.07 1643.77,2264.31 1661.39,2283.84 1681.33,2302.74 1703.32,2321.08 1727.08,2338.94 1752.34,2356.39 1778.83,2373.5 1806.28,2390.35 1834.41,2407.02 1862.94,2423.57 1891.61,2440.09 1920.15,2456.65 1948.28,2473.31 1975.72,2490.17 2002.21,2507.28 2027.47,2524.73 2051.23,2542.58 2073.22,2560.92 2093.16,2579.82 2110.79,2599.36 2125.81,2619.6 2137.98,2640.62 2147.01,2662.49 2152.62,2685.3 2154.56,2709.11 \"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1600,2154.56 1603.87,2182.27 1615.1,2208.15 1633.15,2232.32 1657.48,2254.92 1687.54,2276.09 1722.78,2295.96 1762.67,2314.68 1806.64,2332.37 1854.16,2349.17 1904.69,2365.22 1957.67,2380.66 2012.56,2395.62 2068.81,2410.24 2125.88,2424.66 2183.23,2439.01 2240.3,2453.42 2296.55,2468.04 2351.44,2483.01 2404.42,2498.44 2454.95,2514.5 2502.47,2531.3 2546.44,2548.99 2586.33,2567.7 2621.57,2587.58 2651.63,2608.75 2675.96,2631.35 2694.01,2655.52 2705.25,2681.39 2709.11,2709.11 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M1491.74 562.818 L1708.26 562.818 L1708.26 418.959 L1491.74 418.959 L1491.74 562.818 L1491.74 562.818  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1491.74,562.818 1708.26,562.818 1708.26,418.959 1491.74,418.959 1491.74,562.818 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M1411.5 1117.37 L1788.5 1117.37 L1788.5 973.515 L1411.5 973.515 L1411.5 1117.37 L1411.5 1117.37  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1411.5,1117.37 1788.5,1117.37 1788.5,973.515 1411.5,973.515 1411.5,1117.37 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M1463.72 1671.93 L1736.28 1671.93 L1736.28 1528.07 L1463.72 1528.07 L1463.72 1671.93 L1463.72 1671.93  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1463.72,1671.93 1736.28,1671.93 1736.28,1528.07 1463.72,1528.07 1463.72,1671.93 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M1250.1 2226.49 L1949.9 2226.49 L1949.9 2082.63 L1250.1 2082.63 L1250.1 2226.49 L1250.1 2226.49  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1250.1,2226.49 1949.9,2226.49 1949.9,2082.63 1250.1,2082.63 1250.1,2226.49 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M253.61 2781.04 L728.168 2781.04 L728.168 2637.18 L253.61 2637.18 L253.61 2781.04 L253.61 2781.04  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"253.61,2781.04 728.168,2781.04 728.168,2637.18 253.61,2637.18 253.61,2781.04 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M808.165 2781.04 L1282.72 2781.04 L1282.72 2637.18 L808.165 2637.18 L808.165 2781.04 L808.165 2781.04  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"808.165,2781.04 1282.72,2781.04 1282.72,2637.18 808.165,2637.18 808.165,2781.04 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M1386.76 2781.04 L1813.24 2781.04 L1813.24 2637.18 L1386.76 2637.18 L1386.76 2781.04 L1386.76 2781.04  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1386.76,2781.04 1813.24,2781.04 1813.24,2637.18 1386.76,2637.18 1386.76,2781.04 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M1941.32 2781.04 L2367.79 2781.04 L2367.79 2637.18 L1941.32 2637.18 L1941.32 2781.04 L1941.32 2781.04  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1941.32,2781.04 2367.79,2781.04 2367.79,2637.18 1941.32,2637.18 1941.32,2781.04 \"/>\n<path clip-path=\"url(#clip222)\" d=\"M2495.87 2781.04 L2922.35 2781.04 L2922.35 2637.18 L2495.87 2637.18 L2495.87 2781.04 L2495.87 2781.04  Z\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip222)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2495.87,2781.04 2922.35,2781.04 2922.35,2637.18 2495.87,2637.18 2495.87,2781.04 \"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"1600\" cy=\"490.889\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"1600\" cy=\"1045.44\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"1600\" cy=\"1600\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"1600\" cy=\"2154.56\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"490.889\" cy=\"2709.11\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"1045.44\" cy=\"2709.11\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"1600\" cy=\"2709.11\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"2154.56\" cy=\"2709.11\" r=\"2\"/>\n<circle clip-path=\"url(#clip222)\" style=\"fill:#009af9; stroke:none; fill-opacity:0\" cx=\"2709.11\" cy=\"2709.11\" r=\"2\"/>\n<path clip-path=\"url(#clip220)\" d=\"M1564.32 475.047 L1556.39 496.545 L1572.28 496.545 L1564.32 475.047 M1561.02 469.289 L1567.65 469.289 L1584.11 512.489 L1578.04 512.489 L1574.1 501.407 L1554.63 501.407 L1550.69 512.489 L1544.53 512.489 L1561.02 469.289 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1617.13 492.929 L1617.13 512.489 L1611.81 512.489 L1611.81 493.102 Q1611.81 488.501 1610.01 486.216 Q1608.22 483.93 1604.63 483.93 Q1600.32 483.93 1597.83 486.679 Q1595.34 489.427 1595.34 494.173 L1595.34 512.489 L1589.99 512.489 L1589.99 480.081 L1595.34 480.081 L1595.34 485.116 Q1597.25 482.194 1599.83 480.747 Q1602.43 479.3 1605.82 479.3 Q1611.4 479.3 1614.26 482.772 Q1617.13 486.216 1617.13 492.929 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1641.23 515.498 Q1638.98 521.285 1636.83 523.05 Q1634.69 524.815 1631.11 524.815 L1626.85 524.815 L1626.85 520.359 L1629.98 520.359 Q1632.18 520.359 1633.39 519.317 Q1634.61 518.276 1636.08 514.398 L1637.04 511.968 L1623.93 480.081 L1629.57 480.081 L1639.7 505.428 L1649.83 480.081 L1655.47 480.081 L1641.23 515.498 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1483.88 1023.84 L1491.75 1023.84 L1510.91 1059.98 L1510.91 1023.84 L1516.58 1023.84 L1516.58 1067.04 L1508.71 1067.04 L1489.55 1030.9 L1489.55 1067.04 L1483.88 1067.04 L1483.88 1023.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1527.43 1054.26 L1527.43 1034.64 L1532.75 1034.64 L1532.75 1054.05 Q1532.75 1058.65 1534.55 1060.97 Q1536.34 1063.25 1539.93 1063.25 Q1544.24 1063.25 1546.73 1060.51 Q1549.25 1057.76 1549.25 1053.01 L1549.25 1034.64 L1554.57 1034.64 L1554.57 1067.04 L1549.25 1067.04 L1549.25 1062.07 Q1547.31 1065.02 1544.73 1066.47 Q1542.19 1067.88 1538.8 1067.88 Q1533.22 1067.88 1530.32 1064.41 Q1527.43 1060.94 1527.43 1054.26 M1540.83 1033.86 L1540.83 1033.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1590.77 1040.86 Q1592.77 1037.27 1595.54 1035.56 Q1598.32 1033.86 1602.08 1033.86 Q1607.15 1033.86 1609.9 1037.41 Q1612.64 1040.94 1612.64 1047.48 L1612.64 1067.04 L1607.29 1067.04 L1607.29 1047.66 Q1607.29 1043 1605.64 1040.74 Q1603.99 1038.49 1600.61 1038.49 Q1596.47 1038.49 1594.07 1041.23 Q1591.67 1043.98 1591.67 1048.73 L1591.67 1067.04 L1586.31 1067.04 L1586.31 1047.66 Q1586.31 1042.97 1584.66 1040.74 Q1583.02 1038.49 1579.57 1038.49 Q1575.49 1038.49 1573.09 1041.26 Q1570.69 1044.01 1570.69 1048.73 L1570.69 1067.04 L1565.34 1067.04 L1565.34 1034.64 L1570.69 1034.64 L1570.69 1039.67 Q1572.51 1036.69 1575.06 1035.27 Q1577.6 1033.86 1581.11 1033.86 Q1584.64 1033.86 1587.09 1035.65 Q1589.58 1037.44 1590.77 1040.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1646.53 1050.87 Q1646.53 1045 1644.1 1041.67 Q1641.7 1038.31 1637.47 1038.31 Q1633.25 1038.31 1630.82 1041.67 Q1628.41 1045 1628.41 1050.87 Q1628.41 1056.74 1630.82 1060.1 Q1633.25 1063.43 1637.47 1063.43 Q1641.7 1063.43 1644.1 1060.1 Q1646.53 1056.74 1646.53 1050.87 M1628.41 1039.56 Q1630.09 1036.66 1632.64 1035.27 Q1635.21 1033.86 1638.77 1033.86 Q1644.68 1033.86 1648.35 1038.54 Q1652.05 1043.23 1652.05 1050.87 Q1652.05 1058.51 1648.35 1063.2 Q1644.68 1067.88 1638.77 1067.88 Q1635.21 1067.88 1632.64 1066.49 Q1630.09 1065.08 1628.41 1062.18 L1628.41 1067.04 L1623.06 1067.04 L1623.06 1022.02 L1628.41 1022.02 L1628.41 1039.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1688.6 1049.51 L1688.6 1052.11 L1664.12 1052.11 Q1664.47 1057.61 1667.42 1060.51 Q1670.4 1063.37 1675.69 1063.37 Q1678.76 1063.37 1681.63 1062.62 Q1684.52 1061.86 1687.35 1060.36 L1687.35 1065.4 Q1684.49 1066.61 1681.48 1067.25 Q1678.47 1067.88 1675.38 1067.88 Q1667.62 1067.88 1663.08 1063.37 Q1658.56 1058.86 1658.56 1051.16 Q1658.56 1043.2 1662.85 1038.54 Q1667.16 1033.86 1674.45 1033.86 Q1680.99 1033.86 1684.78 1038.08 Q1688.6 1042.28 1688.6 1049.51 M1683.28 1047.95 Q1683.22 1043.58 1680.82 1040.97 Q1678.44 1038.37 1674.51 1038.37 Q1670.05 1038.37 1667.36 1040.89 Q1664.7 1043.4 1664.29 1047.98 L1683.28 1047.95 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1716.12 1039.61 Q1715.22 1039.09 1714.15 1038.86 Q1713.11 1038.6 1711.83 1038.6 Q1707.32 1038.6 1704.89 1041.55 Q1702.49 1044.47 1702.49 1049.97 L1702.49 1067.04 L1697.13 1067.04 L1697.13 1034.64 L1702.49 1034.64 L1702.49 1039.67 Q1704.17 1036.72 1706.86 1035.3 Q1709.55 1033.86 1713.4 1033.86 Q1713.95 1033.86 1714.61 1033.94 Q1715.28 1034 1716.09 1034.15 L1716.12 1039.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1562.3 1601.35 Q1564.18 1601.98 1565.94 1604.07 Q1567.74 1606.15 1569.53 1609.79 L1575.46 1621.6 L1569.18 1621.6 L1563.66 1610.52 Q1561.52 1606.18 1559.49 1604.76 Q1557.49 1603.34 1554.02 1603.34 L1547.66 1603.34 L1547.66 1621.6 L1541.81 1621.6 L1541.81 1578.4 L1555.01 1578.4 Q1562.41 1578.4 1566.06 1581.5 Q1569.71 1584.59 1569.71 1590.84 Q1569.71 1594.92 1567.8 1597.61 Q1565.91 1600.3 1562.3 1601.35 M1547.66 1583.2 L1547.66 1598.54 L1555.01 1598.54 Q1559.23 1598.54 1561.37 1596.6 Q1563.54 1594.63 1563.54 1590.84 Q1563.54 1587.05 1561.37 1585.14 Q1559.23 1583.2 1555.01 1583.2 L1547.66 1583.2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1607.81 1604.07 L1607.81 1606.67 L1583.33 1606.67 Q1583.68 1612.17 1586.63 1615.06 Q1589.61 1617.93 1594.91 1617.93 Q1597.97 1617.93 1600.84 1617.17 Q1603.73 1616.42 1606.57 1614.92 L1606.57 1619.95 Q1603.7 1621.17 1600.69 1621.8 Q1597.69 1622.44 1594.59 1622.44 Q1586.83 1622.44 1582.29 1617.93 Q1577.78 1613.41 1577.78 1605.71 Q1577.78 1597.76 1582.06 1593.1 Q1586.37 1588.41 1593.66 1588.41 Q1600.2 1588.41 1603.99 1592.64 Q1607.81 1596.83 1607.81 1604.07 M1602.49 1602.5 Q1602.43 1598.13 1600.03 1595.53 Q1597.66 1592.93 1593.72 1592.93 Q1589.27 1592.93 1586.57 1595.44 Q1583.91 1597.96 1583.51 1602.53 L1602.49 1602.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1631.28 1605.31 Q1624.83 1605.31 1622.34 1606.79 Q1619.85 1608.26 1619.85 1611.82 Q1619.85 1614.66 1621.7 1616.33 Q1623.58 1617.98 1626.79 1617.98 Q1631.22 1617.98 1633.88 1614.86 Q1636.57 1611.7 1636.57 1606.5 L1636.57 1605.31 L1631.28 1605.31 M1641.9 1603.11 L1641.9 1621.6 L1636.57 1621.6 L1636.57 1616.68 Q1634.75 1619.63 1632.03 1621.05 Q1629.31 1622.44 1625.38 1622.44 Q1620.4 1622.44 1617.45 1619.66 Q1614.53 1616.85 1614.53 1612.17 Q1614.53 1606.7 1618.17 1603.92 Q1621.85 1601.14 1629.11 1601.14 L1636.57 1601.14 L1636.57 1600.62 Q1636.57 1596.95 1634.14 1594.95 Q1631.74 1592.93 1627.37 1592.93 Q1624.59 1592.93 1621.96 1593.59 Q1619.33 1594.26 1616.9 1595.59 L1616.9 1590.67 Q1619.82 1589.54 1622.57 1588.99 Q1625.32 1588.41 1627.92 1588.41 Q1634.95 1588.41 1638.43 1592.06 Q1641.9 1595.7 1641.9 1603.11 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1652.86 1576.58 L1658.19 1576.58 L1658.19 1621.6 L1652.86 1621.6 L1652.86 1576.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1423.18 2138.71 L1415.25 2160.21 L1431.14 2160.21 L1423.18 2138.71 M1419.88 2132.96 L1426.51 2132.96 L1442.97 2176.16 L1436.89 2176.16 L1432.96 2165.07 L1413.48 2165.07 L1409.55 2176.16 L1403.39 2176.16 L1419.88 2132.96 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1472.31 2159.98 Q1472.31 2154.11 1469.88 2150.78 Q1467.48 2147.42 1463.25 2147.42 Q1459.03 2147.42 1456.6 2150.78 Q1454.2 2154.11 1454.2 2159.98 Q1454.2 2165.85 1456.6 2169.21 Q1459.03 2172.54 1463.25 2172.54 Q1467.48 2172.54 1469.88 2169.21 Q1472.31 2165.85 1472.31 2159.98 M1454.2 2148.67 Q1455.87 2145.77 1458.42 2144.39 Q1461 2142.97 1464.56 2142.97 Q1470.46 2142.97 1474.13 2147.65 Q1477.84 2152.34 1477.84 2159.98 Q1477.84 2167.62 1474.13 2172.31 Q1470.46 2176.99 1464.56 2176.99 Q1461 2176.99 1458.42 2175.61 Q1455.87 2174.19 1454.2 2171.29 L1454.2 2176.16 L1448.84 2176.16 L1448.84 2131.13 L1454.2 2131.13 L1454.2 2148.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1507.32 2144.7 L1507.32 2149.74 Q1505.06 2148.58 1502.63 2148 Q1500.2 2147.42 1497.6 2147.42 Q1493.63 2147.42 1491.64 2148.64 Q1489.67 2149.85 1489.67 2152.28 Q1489.67 2154.14 1491.09 2155.21 Q1492.51 2156.25 1496.79 2157.2 L1498.61 2157.61 Q1504.28 2158.82 1506.66 2161.05 Q1509.06 2163.25 1509.06 2167.21 Q1509.06 2171.73 1505.47 2174.36 Q1501.91 2176.99 1495.66 2176.99 Q1493.06 2176.99 1490.22 2176.47 Q1487.41 2175.98 1484.29 2174.97 L1484.29 2169.47 Q1487.24 2171.01 1490.1 2171.79 Q1492.97 2172.54 1495.78 2172.54 Q1499.54 2172.54 1501.56 2171.27 Q1503.59 2169.96 1503.59 2167.62 Q1503.59 2165.45 1502.11 2164.29 Q1500.67 2163.13 1495.72 2162.06 L1493.87 2161.63 Q1488.92 2160.59 1486.72 2158.45 Q1484.52 2156.28 1484.52 2152.52 Q1484.52 2147.94 1487.76 2145.46 Q1491 2142.97 1496.96 2142.97 Q1499.91 2142.97 1502.52 2143.4 Q1505.12 2143.84 1507.32 2144.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1522.8 2134.55 L1522.8 2143.75 L1533.77 2143.75 L1533.77 2147.89 L1522.8 2147.89 L1522.8 2165.48 Q1522.8 2169.44 1523.87 2170.57 Q1524.97 2171.7 1528.3 2171.7 L1533.77 2171.7 L1533.77 2176.16 L1528.3 2176.16 Q1522.14 2176.16 1519.79 2173.87 Q1517.45 2171.56 1517.45 2165.48 L1517.45 2147.89 L1513.54 2147.89 L1513.54 2143.75 L1517.45 2143.75 L1517.45 2134.55 L1522.8 2134.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1559.55 2148.73 Q1558.65 2148.2 1557.58 2147.97 Q1556.54 2147.71 1555.27 2147.71 Q1550.75 2147.71 1548.32 2150.66 Q1545.92 2153.59 1545.92 2159.08 L1545.92 2176.16 L1540.57 2176.16 L1540.57 2143.75 L1545.92 2143.75 L1545.92 2148.78 Q1547.6 2145.83 1550.29 2144.41 Q1552.98 2142.97 1556.83 2142.97 Q1557.38 2142.97 1558.04 2143.05 Q1558.71 2143.11 1559.52 2143.26 L1559.55 2148.73 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1579.86 2159.87 Q1573.41 2159.87 1570.92 2161.34 Q1568.43 2162.82 1568.43 2166.38 Q1568.43 2169.21 1570.28 2170.89 Q1572.16 2172.54 1575.38 2172.54 Q1579.8 2172.54 1582.47 2169.41 Q1585.16 2166.26 1585.16 2161.05 L1585.16 2159.87 L1579.86 2159.87 M1590.48 2157.67 L1590.48 2176.16 L1585.16 2176.16 L1585.16 2171.24 Q1583.33 2174.19 1580.61 2175.61 Q1577.89 2176.99 1573.96 2176.99 Q1568.98 2176.99 1566.03 2174.22 Q1563.11 2171.41 1563.11 2166.72 Q1563.11 2161.25 1566.75 2158.48 Q1570.43 2155.7 1577.69 2155.7 L1585.16 2155.7 L1585.16 2155.18 Q1585.16 2151.5 1582.73 2149.51 Q1580.32 2147.48 1575.95 2147.48 Q1573.18 2147.48 1570.54 2148.15 Q1567.91 2148.81 1565.48 2150.14 L1565.48 2145.22 Q1568.4 2144.1 1571.15 2143.55 Q1573.9 2142.97 1576.5 2142.97 Q1583.54 2142.97 1587.01 2146.61 Q1590.48 2150.26 1590.48 2157.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1624.77 2144.99 L1624.77 2149.97 Q1622.51 2148.73 1620.23 2148.12 Q1617.97 2147.48 1615.65 2147.48 Q1610.47 2147.48 1607.61 2150.78 Q1604.75 2154.05 1604.75 2159.98 Q1604.75 2165.91 1607.61 2169.21 Q1610.47 2172.48 1615.65 2172.48 Q1617.97 2172.48 1620.23 2171.87 Q1622.51 2171.24 1624.77 2169.99 L1624.77 2174.91 Q1622.54 2175.95 1620.14 2176.47 Q1617.77 2176.99 1615.08 2176.99 Q1607.75 2176.99 1603.44 2172.39 Q1599.13 2167.79 1599.13 2159.98 Q1599.13 2152.05 1603.47 2147.51 Q1607.84 2142.97 1615.42 2142.97 Q1617.88 2142.97 1620.23 2143.49 Q1622.57 2143.98 1624.77 2144.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1639.29 2134.55 L1639.29 2143.75 L1650.26 2143.75 L1650.26 2147.89 L1639.29 2147.89 L1639.29 2165.48 Q1639.29 2169.44 1640.36 2170.57 Q1641.46 2171.7 1644.79 2171.7 L1650.26 2171.7 L1650.26 2176.16 L1644.79 2176.16 Q1638.63 2176.16 1636.28 2173.87 Q1633.94 2171.56 1633.94 2165.48 L1633.94 2147.89 L1630.03 2147.89 L1630.03 2143.75 L1633.94 2143.75 L1633.94 2134.55 L1639.29 2134.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1657.49 2132.96 L1682.32 2132.96 L1682.32 2137.87 L1663.34 2137.87 L1663.34 2150.61 L1680.47 2150.61 L1680.47 2155.53 L1663.34 2155.53 L1663.34 2176.16 L1657.49 2176.16 L1657.49 2132.96 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1691.35 2131.13 L1696.67 2131.13 L1696.67 2176.16 L1691.35 2176.16 L1691.35 2131.13 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1720.37 2147.48 Q1716.09 2147.48 1713.6 2150.84 Q1711.11 2154.17 1711.11 2159.98 Q1711.11 2165.8 1713.57 2169.15 Q1716.06 2172.48 1720.37 2172.48 Q1724.62 2172.48 1727.11 2169.12 Q1729.6 2165.77 1729.6 2159.98 Q1729.6 2154.22 1727.11 2150.87 Q1724.62 2147.48 1720.37 2147.48 M1720.37 2142.97 Q1727.31 2142.97 1731.28 2147.48 Q1735.24 2151.99 1735.24 2159.98 Q1735.24 2167.94 1731.28 2172.48 Q1727.31 2176.99 1720.37 2176.99 Q1713.4 2176.99 1709.43 2172.48 Q1705.5 2167.94 1705.5 2159.98 Q1705.5 2151.99 1709.43 2147.48 Q1713.4 2142.97 1720.37 2142.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1758.8 2159.87 Q1752.34 2159.87 1749.85 2161.34 Q1747.37 2162.82 1747.37 2166.38 Q1747.37 2169.21 1749.22 2170.89 Q1751.1 2172.54 1754.31 2172.54 Q1758.74 2172.54 1761.4 2169.41 Q1764.09 2166.26 1764.09 2161.05 L1764.09 2159.87 L1758.8 2159.87 M1769.41 2157.67 L1769.41 2176.16 L1764.09 2176.16 L1764.09 2171.24 Q1762.27 2174.19 1759.55 2175.61 Q1756.83 2176.99 1752.89 2176.99 Q1747.92 2176.99 1744.96 2174.22 Q1742.04 2171.41 1742.04 2166.72 Q1742.04 2161.25 1745.69 2158.48 Q1749.36 2155.7 1756.63 2155.7 L1764.09 2155.7 L1764.09 2155.18 Q1764.09 2151.5 1761.66 2149.51 Q1759.26 2147.48 1754.89 2147.48 Q1752.11 2147.48 1749.48 2148.15 Q1746.85 2148.81 1744.41 2150.14 L1744.41 2145.22 Q1747.34 2144.1 1750.09 2143.55 Q1752.83 2142.97 1755.44 2142.97 Q1762.47 2142.97 1765.94 2146.61 Q1769.41 2150.26 1769.41 2157.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1785.65 2134.55 L1785.65 2143.75 L1796.61 2143.75 L1796.61 2147.89 L1785.65 2147.89 L1785.65 2165.48 Q1785.65 2169.44 1786.72 2170.57 Q1787.82 2171.7 1791.14 2171.7 L1796.61 2171.7 L1796.61 2176.16 L1791.14 2176.16 Q1784.98 2176.16 1782.64 2173.87 Q1780.29 2171.56 1780.29 2165.48 L1780.29 2147.89 L1776.39 2147.89 L1776.39 2143.75 L1780.29 2143.75 L1780.29 2134.55 L1785.65 2134.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M379.807 2710.08 L379.807 2725.91 L389.182 2725.91 Q393.898 2725.91 396.155 2723.97 Q398.441 2722 398.441 2717.98 Q398.441 2713.93 396.155 2712.02 Q393.898 2710.08 389.182 2710.08 L379.807 2710.08 M379.807 2692.31 L379.807 2705.34 L388.459 2705.34 Q392.741 2705.34 394.824 2703.74 Q396.937 2702.12 396.937 2698.82 Q396.937 2695.56 394.824 2693.93 Q392.741 2692.31 388.459 2692.31 L379.807 2692.31 M373.962 2687.51 L388.893 2687.51 Q395.577 2687.51 399.194 2690.29 Q402.81 2693.07 402.81 2698.19 Q402.81 2702.15 400.959 2704.5 Q399.107 2706.84 395.519 2707.42 Q399.83 2708.34 402.203 2711.3 Q404.604 2714.22 404.604 2718.62 Q404.604 2724.4 400.669 2727.56 Q396.734 2730.71 389.471 2730.71 L373.962 2730.71 L373.962 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M414.384 2698.3 L419.708 2698.3 L419.708 2730.71 L414.384 2730.71 L414.384 2698.3 M414.384 2685.69 L419.708 2685.69 L419.708 2692.43 L414.384 2692.43 L414.384 2685.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M452.174 2714.13 Q452.174 2708.34 449.772 2705.16 Q447.399 2701.98 443.088 2701.98 Q438.806 2701.98 436.404 2705.16 Q434.031 2708.34 434.031 2714.13 Q434.031 2719.89 436.404 2723.07 Q438.806 2726.26 443.088 2726.26 Q447.399 2726.26 449.772 2723.07 Q452.174 2719.89 452.174 2714.13 M457.498 2726.69 Q457.498 2734.96 453.823 2738.99 Q450.148 2743.04 442.567 2743.04 Q439.76 2743.04 437.272 2742.6 Q434.784 2742.2 432.44 2741.33 L432.44 2736.15 Q434.784 2737.42 437.069 2738.03 Q439.355 2738.64 441.728 2738.64 Q446.965 2738.64 449.569 2735.89 Q452.174 2733.17 452.174 2727.64 L452.174 2725.01 Q450.524 2727.88 447.949 2729.29 Q445.374 2730.71 441.786 2730.71 Q435.825 2730.71 432.179 2726.17 Q428.534 2721.63 428.534 2714.13 Q428.534 2706.61 432.179 2702.07 Q435.825 2697.52 441.786 2697.52 Q445.374 2697.52 447.949 2698.94 Q450.524 2700.36 452.174 2703.22 L452.174 2698.3 L457.498 2698.3 L457.498 2726.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M468.695 2687.51 L493.522 2687.51 L493.522 2692.43 L474.54 2692.43 L474.54 2705.16 L491.67 2705.16 L491.67 2710.08 L474.54 2710.08 L474.54 2730.71 L468.695 2730.71 L468.695 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M502.549 2685.69 L507.874 2685.69 L507.874 2730.71 L502.549 2730.71 L502.549 2685.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M531.571 2702.04 Q527.289 2702.04 524.8 2705.39 Q522.312 2708.72 522.312 2714.54 Q522.312 2720.35 524.772 2723.71 Q527.26 2727.04 531.571 2727.04 Q535.825 2727.04 538.313 2723.68 Q540.802 2720.32 540.802 2714.54 Q540.802 2708.78 538.313 2705.42 Q535.825 2702.04 531.571 2702.04 M531.571 2697.52 Q538.516 2697.52 542.48 2702.04 Q546.444 2706.55 546.444 2714.54 Q546.444 2722.49 542.48 2727.04 Q538.516 2731.55 531.571 2731.55 Q524.598 2731.55 520.634 2727.04 Q516.699 2722.49 516.699 2714.54 Q516.699 2706.55 520.634 2702.04 Q524.598 2697.52 531.571 2697.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M569.997 2714.42 Q563.544 2714.42 561.056 2715.9 Q558.568 2717.37 558.568 2720.93 Q558.568 2723.77 560.42 2725.45 Q562.3 2727.09 565.512 2727.09 Q569.939 2727.09 572.601 2723.97 Q575.292 2720.82 575.292 2715.61 L575.292 2714.42 L569.997 2714.42 M580.616 2712.22 L580.616 2730.71 L575.292 2730.71 L575.292 2725.79 Q573.469 2728.74 570.749 2730.16 Q568.029 2731.55 564.094 2731.55 Q559.117 2731.55 556.166 2728.77 Q553.244 2725.97 553.244 2721.28 Q553.244 2715.81 556.889 2713.03 Q560.564 2710.25 567.827 2710.25 L575.292 2710.25 L575.292 2709.73 Q575.292 2706.06 572.862 2704.06 Q570.46 2702.04 566.091 2702.04 Q563.313 2702.04 560.68 2702.7 Q558.047 2703.37 555.616 2704.7 L555.616 2699.78 Q558.539 2698.65 561.288 2698.1 Q564.036 2697.52 566.641 2697.52 Q573.672 2697.52 577.144 2701.17 Q580.616 2704.81 580.616 2712.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M596.849 2689.1 L596.849 2698.3 L607.815 2698.3 L607.815 2702.44 L596.849 2702.44 L596.849 2720.03 Q596.849 2724 597.919 2725.13 Q599.019 2726.26 602.346 2726.26 L607.815 2726.26 L607.815 2730.71 L602.346 2730.71 Q596.183 2730.71 593.839 2728.43 Q591.496 2726.11 591.496 2720.03 L591.496 2702.44 L587.59 2702.44 L587.59 2698.3 L591.496 2698.3 L591.496 2689.1 L596.849 2689.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M924.858 2710.08 L924.858 2725.91 L934.233 2725.91 Q938.949 2725.91 941.206 2723.97 Q943.492 2722 943.492 2717.98 Q943.492 2713.93 941.206 2712.02 Q938.949 2710.08 934.233 2710.08 L924.858 2710.08 M924.858 2692.31 L924.858 2705.34 L933.509 2705.34 Q937.792 2705.34 939.875 2703.74 Q941.987 2702.12 941.987 2698.82 Q941.987 2695.56 939.875 2693.93 Q937.792 2692.31 933.509 2692.31 L924.858 2692.31 M919.013 2687.51 L933.943 2687.51 Q940.627 2687.51 944.244 2690.29 Q947.861 2693.07 947.861 2698.19 Q947.861 2702.15 946.009 2704.5 Q944.157 2706.84 940.569 2707.42 Q944.881 2708.34 947.253 2711.3 Q949.655 2714.22 949.655 2718.62 Q949.655 2724.4 945.72 2727.56 Q941.785 2730.71 934.522 2730.71 L919.013 2730.71 L919.013 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M959.666 2687.51 L984.493 2687.51 L984.493 2692.43 L965.511 2692.43 L965.511 2705.16 L982.641 2705.16 L982.641 2710.08 L965.511 2710.08 L965.511 2730.71 L959.666 2730.71 L959.666 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M993.52 2685.69 L998.844 2685.69 L998.844 2730.71 L993.52 2730.71 L993.52 2685.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1022.54 2702.04 Q1018.26 2702.04 1015.77 2705.39 Q1013.28 2708.72 1013.28 2714.54 Q1013.28 2720.35 1015.74 2723.71 Q1018.23 2727.04 1022.54 2727.04 Q1026.8 2727.04 1029.28 2723.68 Q1031.77 2720.32 1031.77 2714.54 Q1031.77 2708.78 1029.28 2705.42 Q1026.8 2702.04 1022.54 2702.04 M1022.54 2697.52 Q1029.49 2697.52 1033.45 2702.04 Q1037.41 2706.55 1037.41 2714.54 Q1037.41 2722.49 1033.45 2727.04 Q1029.49 2731.55 1022.54 2731.55 Q1015.57 2731.55 1011.6 2727.04 Q1007.67 2722.49 1007.67 2714.54 Q1007.67 2706.55 1011.6 2702.04 Q1015.57 2697.52 1022.54 2697.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1060.97 2714.42 Q1054.52 2714.42 1052.03 2715.9 Q1049.54 2717.37 1049.54 2720.93 Q1049.54 2723.77 1051.39 2725.45 Q1053.27 2727.09 1056.48 2727.09 Q1060.91 2727.09 1063.57 2723.97 Q1066.26 2720.82 1066.26 2715.61 L1066.26 2714.42 L1060.97 2714.42 M1071.59 2712.22 L1071.59 2730.71 L1066.26 2730.71 L1066.26 2725.79 Q1064.44 2728.74 1061.72 2730.16 Q1059 2731.55 1055.07 2731.55 Q1050.09 2731.55 1047.14 2728.77 Q1044.21 2725.97 1044.21 2721.28 Q1044.21 2715.81 1047.86 2713.03 Q1051.54 2710.25 1058.8 2710.25 L1066.26 2710.25 L1066.26 2709.73 Q1066.26 2706.06 1063.83 2704.06 Q1061.43 2702.04 1057.06 2702.04 Q1054.28 2702.04 1051.65 2702.7 Q1049.02 2703.37 1046.59 2704.7 L1046.59 2699.78 Q1049.51 2698.65 1052.26 2698.1 Q1055.01 2697.52 1057.61 2697.52 Q1064.64 2697.52 1068.11 2701.17 Q1071.59 2704.81 1071.59 2712.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1087.82 2689.1 L1087.82 2698.3 L1098.79 2698.3 L1098.79 2702.44 L1087.82 2702.44 L1087.82 2720.03 Q1087.82 2724 1088.89 2725.13 Q1089.99 2726.26 1093.32 2726.26 L1098.79 2726.26 L1098.79 2730.71 L1093.32 2730.71 Q1087.15 2730.71 1084.81 2728.43 Q1082.47 2726.11 1082.47 2720.03 L1082.47 2702.44 L1078.56 2702.44 L1078.56 2698.3 L1082.47 2698.3 L1082.47 2689.1 L1087.82 2689.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1107.55 2725.79 L1117.1 2725.79 L1117.1 2692.84 L1106.71 2694.92 L1106.71 2689.59 L1117.04 2687.51 L1122.89 2687.51 L1122.89 2725.79 L1132.44 2725.79 L1132.44 2730.71 L1107.55 2730.71 L1107.55 2725.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1157.47 2706.78 Q1153.53 2706.78 1151.22 2709.47 Q1148.93 2712.16 1148.93 2716.85 Q1148.93 2721.51 1151.22 2724.23 Q1153.53 2726.92 1157.47 2726.92 Q1161.4 2726.92 1163.69 2724.23 Q1166 2721.51 1166 2716.85 Q1166 2712.16 1163.69 2709.47 Q1161.4 2706.78 1157.47 2706.78 M1169.07 2688.47 L1169.07 2693.79 Q1166.87 2692.75 1164.61 2692.2 Q1162.39 2691.65 1160.19 2691.65 Q1154.4 2691.65 1151.33 2695.56 Q1148.29 2699.46 1147.86 2707.36 Q1149.57 2704.84 1152.14 2703.51 Q1154.72 2702.15 1157.81 2702.15 Q1164.32 2702.15 1168.09 2706.12 Q1171.88 2710.05 1171.88 2716.85 Q1171.88 2723.51 1167.94 2727.53 Q1164.01 2731.55 1157.47 2731.55 Q1149.97 2731.55 1146.01 2725.82 Q1142.04 2720.06 1142.04 2709.15 Q1142.04 2698.91 1146.91 2692.84 Q1151.77 2686.73 1159.95 2686.73 Q1162.15 2686.73 1164.38 2687.16 Q1166.64 2687.6 1169.07 2688.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1493.9 2687.51 L1518.72 2687.51 L1518.72 2692.43 L1499.74 2692.43 L1499.74 2705.16 L1516.87 2705.16 L1516.87 2710.08 L1499.74 2710.08 L1499.74 2730.71 L1493.9 2730.71 L1493.9 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1527.75 2685.69 L1533.07 2685.69 L1533.07 2730.71 L1527.75 2730.71 L1527.75 2685.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1556.77 2702.04 Q1552.49 2702.04 1550 2705.39 Q1547.51 2708.72 1547.51 2714.54 Q1547.51 2720.35 1549.97 2723.71 Q1552.46 2727.04 1556.77 2727.04 Q1561.02 2727.04 1563.51 2723.68 Q1566 2720.32 1566 2714.54 Q1566 2708.78 1563.51 2705.42 Q1561.02 2702.04 1556.77 2702.04 M1556.77 2697.52 Q1563.72 2697.52 1567.68 2702.04 Q1571.64 2706.55 1571.64 2714.54 Q1571.64 2722.49 1567.68 2727.04 Q1563.72 2731.55 1556.77 2731.55 Q1549.8 2731.55 1545.83 2727.04 Q1541.9 2722.49 1541.9 2714.54 Q1541.9 2706.55 1545.83 2702.04 Q1549.8 2697.52 1556.77 2697.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1595.2 2714.42 Q1588.74 2714.42 1586.26 2715.9 Q1583.77 2717.37 1583.77 2720.93 Q1583.77 2723.77 1585.62 2725.45 Q1587.5 2727.09 1590.71 2727.09 Q1595.14 2727.09 1597.8 2723.97 Q1600.49 2720.82 1600.49 2715.61 L1600.49 2714.42 L1595.2 2714.42 M1605.82 2712.22 L1605.82 2730.71 L1600.49 2730.71 L1600.49 2725.79 Q1598.67 2728.74 1595.95 2730.16 Q1593.23 2731.55 1589.29 2731.55 Q1584.32 2731.55 1581.37 2728.77 Q1578.44 2725.97 1578.44 2721.28 Q1578.44 2715.81 1582.09 2713.03 Q1585.76 2710.25 1593.03 2710.25 L1600.49 2710.25 L1600.49 2709.73 Q1600.49 2706.06 1598.06 2704.06 Q1595.66 2702.04 1591.29 2702.04 Q1588.51 2702.04 1585.88 2702.7 Q1583.25 2703.37 1580.82 2704.7 L1580.82 2699.78 Q1583.74 2698.65 1586.49 2698.1 Q1589.24 2697.52 1591.84 2697.52 Q1598.87 2697.52 1602.34 2701.17 Q1605.82 2704.81 1605.82 2712.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1622.05 2689.1 L1622.05 2698.3 L1633.01 2698.3 L1633.01 2702.44 L1622.05 2702.44 L1622.05 2720.03 Q1622.05 2724 1623.12 2725.13 Q1624.22 2726.26 1627.55 2726.26 L1633.01 2726.26 L1633.01 2730.71 L1627.55 2730.71 Q1621.38 2730.71 1619.04 2728.43 Q1616.7 2726.11 1616.7 2720.03 L1616.7 2702.44 L1612.79 2702.44 L1612.79 2698.3 L1616.7 2698.3 L1616.7 2689.1 L1622.05 2689.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1641.78 2725.79 L1651.33 2725.79 L1651.33 2692.84 L1640.94 2694.92 L1640.94 2689.59 L1651.27 2687.51 L1657.12 2687.51 L1657.12 2725.79 L1666.67 2725.79 L1666.67 2730.71 L1641.78 2730.71 L1641.78 2725.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M1691.7 2706.78 Q1687.76 2706.78 1685.45 2709.47 Q1683.16 2712.16 1683.16 2716.85 Q1683.16 2721.51 1685.45 2724.23 Q1687.76 2726.92 1691.7 2726.92 Q1695.63 2726.92 1697.92 2724.23 Q1700.23 2721.51 1700.23 2716.85 Q1700.23 2712.16 1697.92 2709.47 Q1695.63 2706.78 1691.7 2706.78 M1703.3 2688.47 L1703.3 2693.79 Q1701.1 2692.75 1698.84 2692.2 Q1696.61 2691.65 1694.42 2691.65 Q1688.63 2691.65 1685.56 2695.56 Q1682.52 2699.46 1682.09 2707.36 Q1683.8 2704.84 1686.37 2703.51 Q1688.95 2702.15 1692.04 2702.15 Q1698.55 2702.15 1702.31 2706.12 Q1706.1 2710.05 1706.1 2716.85 Q1706.1 2723.51 1702.17 2727.53 Q1698.23 2731.55 1691.7 2731.55 Q1684.2 2731.55 1680.24 2725.82 Q1676.27 2720.06 1676.27 2709.15 Q1676.27 2698.91 1681.13 2692.84 Q1685.99 2686.73 1694.18 2686.73 Q1696.38 2686.73 1698.61 2687.16 Q1700.87 2687.6 1703.3 2688.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2049.55 2687.51 L2074.38 2687.51 L2074.38 2692.43 L2055.4 2692.43 L2055.4 2705.16 L2072.52 2705.16 L2072.52 2710.08 L2055.4 2710.08 L2055.4 2730.71 L2049.55 2730.71 L2049.55 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2083.4 2685.69 L2088.73 2685.69 L2088.73 2730.71 L2083.4 2730.71 L2083.4 2685.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2112.43 2702.04 Q2108.14 2702.04 2105.66 2705.39 Q2103.17 2708.72 2103.17 2714.54 Q2103.17 2720.35 2105.63 2723.71 Q2108.11 2727.04 2112.43 2727.04 Q2116.68 2727.04 2119.17 2723.68 Q2121.66 2720.32 2121.66 2714.54 Q2121.66 2708.78 2119.17 2705.42 Q2116.68 2702.04 2112.43 2702.04 M2112.43 2697.52 Q2119.37 2697.52 2123.33 2702.04 Q2127.3 2706.55 2127.3 2714.54 Q2127.3 2722.49 2123.33 2727.04 Q2119.37 2731.55 2112.43 2731.55 Q2105.45 2731.55 2101.49 2727.04 Q2097.55 2722.49 2097.55 2714.54 Q2097.55 2706.55 2101.49 2702.04 Q2105.45 2697.52 2112.43 2697.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2150.85 2714.42 Q2144.4 2714.42 2141.91 2715.9 Q2139.42 2717.37 2139.42 2720.93 Q2139.42 2723.77 2141.27 2725.45 Q2143.16 2727.09 2146.37 2727.09 Q2150.79 2727.09 2153.46 2723.97 Q2156.15 2720.82 2156.15 2715.61 L2156.15 2714.42 L2150.85 2714.42 M2161.47 2712.22 L2161.47 2730.71 L2156.15 2730.71 L2156.15 2725.79 Q2154.32 2728.74 2151.6 2730.16 Q2148.88 2731.55 2144.95 2731.55 Q2139.97 2731.55 2137.02 2728.77 Q2134.1 2725.97 2134.1 2721.28 Q2134.1 2715.81 2137.74 2713.03 Q2141.42 2710.25 2148.68 2710.25 L2156.15 2710.25 L2156.15 2709.73 Q2156.15 2706.06 2153.72 2704.06 Q2151.31 2702.04 2146.95 2702.04 Q2144.17 2702.04 2141.53 2702.7 Q2138.9 2703.37 2136.47 2704.7 L2136.47 2699.78 Q2139.39 2698.65 2142.14 2698.1 Q2144.89 2697.52 2147.5 2697.52 Q2154.53 2697.52 2158 2701.17 Q2161.47 2704.81 2161.47 2712.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2177.7 2689.1 L2177.7 2698.3 L2188.67 2698.3 L2188.67 2702.44 L2177.7 2702.44 L2177.7 2720.03 Q2177.7 2724 2178.77 2725.13 Q2179.87 2726.26 2183.2 2726.26 L2188.67 2726.26 L2188.67 2730.71 L2183.2 2730.71 Q2177.04 2730.71 2174.69 2728.43 Q2172.35 2726.11 2172.35 2720.03 L2172.35 2702.44 L2168.44 2702.44 L2168.44 2698.3 L2172.35 2698.3 L2172.35 2689.1 L2177.7 2689.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2214.13 2707.42 Q2218.33 2708.32 2220.67 2711.15 Q2223.04 2713.99 2223.04 2718.15 Q2223.04 2724.55 2218.65 2728.05 Q2214.25 2731.55 2206.15 2731.55 Q2203.43 2731.55 2200.53 2731 Q2197.67 2730.48 2194.6 2729.41 L2194.6 2723.77 Q2197.03 2725.18 2199.93 2725.91 Q2202.82 2726.63 2205.97 2726.63 Q2211.47 2726.63 2214.34 2724.46 Q2217.23 2722.29 2217.23 2718.15 Q2217.23 2714.33 2214.54 2712.19 Q2211.88 2710.02 2207.1 2710.02 L2202.07 2710.02 L2202.07 2705.22 L2207.33 2705.22 Q2211.64 2705.22 2213.93 2703.51 Q2216.22 2701.78 2216.22 2698.54 Q2216.22 2695.21 2213.84 2693.44 Q2211.5 2691.65 2207.1 2691.65 Q2204.7 2691.65 2201.95 2692.17 Q2199.2 2692.69 2195.9 2693.79 L2195.9 2688.58 Q2199.23 2687.66 2202.12 2687.19 Q2205.05 2686.73 2207.62 2686.73 Q2214.28 2686.73 2218.15 2689.77 Q2222.03 2692.78 2222.03 2697.93 Q2222.03 2701.52 2219.98 2704 Q2217.92 2706.46 2214.13 2707.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2239.16 2725.79 L2259.56 2725.79 L2259.56 2730.71 L2232.13 2730.71 L2232.13 2725.79 Q2235.46 2722.35 2241.19 2716.56 Q2246.95 2710.75 2248.42 2709.07 Q2251.23 2705.91 2252.33 2703.74 Q2253.46 2701.54 2253.46 2699.43 Q2253.46 2695.99 2251.03 2693.82 Q2248.62 2691.65 2244.75 2691.65 Q2242 2691.65 2238.93 2692.6 Q2235.89 2693.56 2232.42 2695.5 L2232.42 2689.59 Q2235.95 2688.18 2239.02 2687.45 Q2242.08 2686.73 2244.63 2686.73 Q2251.34 2686.73 2255.34 2690.09 Q2259.33 2693.44 2259.33 2699.06 Q2259.33 2701.72 2258.32 2704.12 Q2257.33 2706.49 2254.7 2709.73 Q2253.98 2710.57 2250.1 2714.59 Q2246.22 2718.59 2239.16 2725.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2602.8 2687.51 L2627.63 2687.51 L2627.63 2692.43 L2608.65 2692.43 L2608.65 2705.16 L2625.78 2705.16 L2625.78 2710.08 L2608.65 2710.08 L2608.65 2730.71 L2602.8 2730.71 L2602.8 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2636.66 2685.69 L2641.98 2685.69 L2641.98 2730.71 L2636.66 2730.71 L2636.66 2685.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2665.68 2702.04 Q2661.4 2702.04 2658.91 2705.39 Q2656.42 2708.72 2656.42 2714.54 Q2656.42 2720.35 2658.88 2723.71 Q2661.37 2727.04 2665.68 2727.04 Q2669.93 2727.04 2672.42 2723.68 Q2674.91 2720.32 2674.91 2714.54 Q2674.91 2708.78 2672.42 2705.42 Q2669.93 2702.04 2665.68 2702.04 M2665.68 2697.52 Q2672.62 2697.52 2676.59 2702.04 Q2680.55 2706.55 2680.55 2714.54 Q2680.55 2722.49 2676.59 2727.04 Q2672.62 2731.55 2665.68 2731.55 Q2658.71 2731.55 2654.74 2727.04 Q2650.81 2722.49 2650.81 2714.54 Q2650.81 2706.55 2654.74 2702.04 Q2658.71 2697.52 2665.68 2697.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2704.11 2714.42 Q2697.65 2714.42 2695.16 2715.9 Q2692.68 2717.37 2692.68 2720.93 Q2692.68 2723.77 2694.53 2725.45 Q2696.41 2727.09 2699.62 2727.09 Q2704.05 2727.09 2706.71 2723.97 Q2709.4 2720.82 2709.4 2715.61 L2709.4 2714.42 L2704.11 2714.42 M2714.72 2712.22 L2714.72 2730.71 L2709.4 2730.71 L2709.4 2725.79 Q2707.58 2728.74 2704.86 2730.16 Q2702.14 2731.55 2698.2 2731.55 Q2693.23 2731.55 2690.27 2728.77 Q2687.35 2725.97 2687.35 2721.28 Q2687.35 2715.81 2691 2713.03 Q2694.67 2710.25 2701.94 2710.25 L2709.4 2710.25 L2709.4 2709.73 Q2709.4 2706.06 2706.97 2704.06 Q2704.57 2702.04 2700.2 2702.04 Q2697.42 2702.04 2694.79 2702.7 Q2692.16 2703.37 2689.72 2704.7 L2689.72 2699.78 Q2692.65 2698.65 2695.4 2698.1 Q2698.14 2697.52 2700.75 2697.52 Q2707.78 2697.52 2711.25 2701.17 Q2714.72 2704.81 2714.72 2712.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2730.96 2689.1 L2730.96 2698.3 L2741.92 2698.3 L2741.92 2702.44 L2730.96 2702.44 L2730.96 2720.03 Q2730.96 2724 2732.03 2725.13 Q2733.13 2726.26 2736.45 2726.26 L2741.92 2726.26 L2741.92 2730.71 L2736.45 2730.71 Q2730.29 2730.71 2727.95 2728.43 Q2725.6 2726.11 2725.6 2720.03 L2725.6 2702.44 L2721.7 2702.44 L2721.7 2698.3 L2725.6 2698.3 L2725.6 2689.1 L2730.96 2689.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2762.9 2706.78 Q2758.97 2706.78 2756.65 2709.47 Q2754.37 2712.16 2754.37 2716.85 Q2754.37 2721.51 2756.65 2724.23 Q2758.97 2726.92 2762.9 2726.92 Q2766.84 2726.92 2769.12 2724.23 Q2771.44 2721.51 2771.44 2716.85 Q2771.44 2712.16 2769.12 2709.47 Q2766.84 2706.78 2762.9 2706.78 M2774.5 2688.47 L2774.5 2693.79 Q2772.31 2692.75 2770.05 2692.2 Q2767.82 2691.65 2765.62 2691.65 Q2759.83 2691.65 2756.77 2695.56 Q2753.73 2699.46 2753.3 2707.36 Q2755 2704.84 2757.58 2703.51 Q2760.15 2702.15 2763.25 2702.15 Q2769.76 2702.15 2773.52 2706.12 Q2777.31 2710.05 2777.31 2716.85 Q2777.31 2723.51 2773.38 2727.53 Q2769.44 2731.55 2762.9 2731.55 Q2755.41 2731.55 2751.44 2725.82 Q2747.48 2720.06 2747.48 2709.15 Q2747.48 2698.91 2752.34 2692.84 Q2757.2 2686.73 2765.39 2686.73 Q2767.59 2686.73 2769.82 2687.16 Q2772.07 2687.6 2774.5 2688.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip220)\" d=\"M2803.44 2692.6 L2788.68 2715.67 L2803.44 2715.67 L2803.44 2692.6 M2801.91 2687.51 L2809.26 2687.51 L2809.26 2715.67 L2815.42 2715.67 L2815.42 2720.53 L2809.26 2720.53 L2809.26 2730.71 L2803.44 2730.71 L2803.44 2720.53 L2783.94 2720.53 L2783.94 2714.88 L2801.91 2687.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n```\n:::\n:::\n\n\n### Abstract and Concrete Types\n\nTypes in Julia can be [**abstract**](https://docs.julialang.org/en/v1/manual/types/#man-abstract-types) or **concrete**:\n\n- **Abstract types** serve as nodes in the hierarchy but cannot be instantiated. They provide a framework for organizing related types.\n- **Concrete types** can be instantiated and are the actual types used for values.\n\nFor example, Julia’s `Real` and `AbstractFloat` types are abstract, while `Int64` and `Float64` are concrete subtypes.\n\n::: {#29151c1e .cell execution_count=3}\n``` {.julia .cell-code}\n@myshow begin #| hide\nn::Int64 = 42   # Int64 is a concrete type\ntypeof(n)       # Output: Int64 (concrete type)\nr::Real = 3.14  # Real is an abstract type\ntypeof(r)       # Output: Float64 (concrete type)\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> n::Int64 = 42\njulia> typeof(n) = Int64\njulia> r::Real = 3.14\njulia> typeof(r) = Float64\n```\n:::\n:::\n\n\n### Checking if a Type is Concrete\n\nIn Julia, you can use the `isconcretetype` function to check if a type is concrete (meaning it can be instantiated) or abstract (which serves as a blueprint for other types but cannot be instantiated directly).\n\n::: {#c1d1b39c .cell execution_count=4}\n``` {.julia .cell-code}\n@myshow begin #| hide\nisconcretetype(Int64)\nisconcretetype(AbstractFloat)\nend  #| hide\nnothing #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> isconcretetype(Int64) = true\njulia> isconcretetype(AbstractFloat) = false\n```\n:::\n:::\n\n\nThe `isconcretetype` function returns `true` for concrete types (like `Int64` or `Float64`) and `false` for abstract types (like `AbstractFloat` or `Real`).\n\n### Get the Type of a Variable\n\nYou can use the `typeof()` function to get the type of a variable:\n\n::: {#35839494 .cell execution_count=5}\n``` {.julia .cell-code}\n@myshow begin #| hide\na = 42\ntypeof(a)\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> a = 42\njulia> typeof(a) = Int64\n```\n:::\n:::\n\n\nThe `typeof()` function returns the concrete type of the variable.\n\n### Example\n\nLet's instantiate a variable with a specific concrete type, check its type using `typeof()`, and verify if it’s concrete using `isconcretetype`:\n\n::: {#079924c4 .cell execution_count=6}\n``` {.julia .cell-code}\n@myshow begin #| hide\na = 3.14\ntypeof(a)\nisconcretetype(typeof(a))\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> a = 3.14\njulia> typeof(a) = Float64\njulia> isconcretetype(typeof(a)) = true\n```\n:::\n:::\n\n\n### The `isa` Operator\n\nThe `isa` operator is used to check if a value is an instance of a specific type:\n\n::: {#88c3d0cf .cell execution_count=7}\n``` {.julia .cell-code}\n@myshow begin #| hide\na = 42\na isa Int64\na isa Number\na isa Float64\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> a = 42\njulia> a isa Int64 = true\njulia> a isa Number = true\njulia> a isa Float64 = false\n```\n:::\n:::\n\n\nThe `isa` operator is often used for type checking within functions or when validating data.\n\n\n### The `<:` Operator\n\nThe `<:` operator checks if a type is a subtype of another type in the hierarchy. It can be used for checking if one type is a more general or more specific type than another:\n\n::: {#47c3b90b .cell execution_count=8}\n``` {.julia .cell-code}\n@myshow begin #| hide\nInt64 <: Real\nFloat64 <: Real\nReal <: Number\nNumber <: Real\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> Int64 <: Real = true\njulia> Float64 <: Real = true\njulia> Real <: Number = true\njulia> Number <: Real = false\n```\n:::\n:::\n\n\n### Creating Custom Abstract Types\n\nJulia allows you to create your own abstract types. For example, you can define a custom abstract type `Shape`, and create concrete subtypes like `Circle` and `Rectangle`.\n\n::: {#612fddf0 .cell execution_count=9}\n``` {.julia .cell-code}\n# Define abstract type\nabstract type Shape end\n\n# Define concrete subtypes\nstruct Circle <: Shape\n    radius::Float64\nend\n\nstruct Rectangle <: Shape\n    width::Float64\n    height::Float64\nend\n\n# Create instances\ncircle = Circle(5.0)\nrectangle = Rectangle(3.0, 4.0)\n\n# Check if they are subtypes of Shape\n@myshow begin #| hide\ncircle isa Shape\nrectangle isa Shape\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> circle isa Shape = true\njulia> rectangle isa Shape = true\n```\n:::\n:::\n\n\n### Getting Subtypes and Parent Types\n\nIn Julia, you can use the `subtypes()` function to find all direct subtypes of a given type. Additionally, the `supertypes()` function can be used to get the entire chain of parent (super) types for a given type.\n\n#### Getting Subtypes\n\nTo find all direct subtypes of a specific type, you can use the `subtypes()` function. Here’s an example:\n\n::: {#621efc07 .cell execution_count=10}\n``` {.julia .cell-code}\nsubtypes(AbstractFloat)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n5-element Vector{Any}:\n BigFloat\n Core.BFloat16\n Float16\n Float32\n Float64\n```\n:::\n:::\n\n\nThis will return all direct subtypes of `AbstractFloat`. To visualize the type hierarchy, you can use the `plot` function from the `GraphRecipes` package or for a textual representation, you can do the following:\n\n::: {#12b49a6f .cell execution_count=11}\n``` {.julia .cell-code}\nusing AbstractTrees\nAbstractTrees.children(d::DataType) = subtypes(d)\nprint_tree(Real)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReal\n├─ AbstractFloat\n│  ├─ BigFloat\n│  ├─ BFloat16\n│  ├─ Float16\n│  ├─ Float32\n│  └─ Float64\n├─ AbstractIrrational\n│  ├─ Irrational\n│  └─ IrrationalConstant\n│     ├─ Fourinvπ\n│     ├─ Fourπ\n│     ├─ Halfπ\n│     ├─ Inv2π\n│     ├─ Inv4π\n│     ├─ Invsqrt2\n│     ├─ Invsqrt2π\n│     ├─ Invsqrtπ\n│     ├─ Invπ\n│     ├─ Log2π\n│     ├─ Log4π\n│     ├─ Loghalf\n│     ├─ Logten\n│     ├─ Logtwo\n│     ├─ Logπ\n│     ├─ Quartπ\n│     ├─ Sqrt2\n│     ├─ Sqrt2π\n│     ├─ Sqrt3\n│     ├─ Sqrt4π\n│     ├─ Sqrthalfπ\n│     ├─ Sqrtπ\n│     ├─ Twoinvπ\n│     └─ Twoπ\n├─ FixedPoint\n├─ Integer\n│  ├─ Bool\n│  ├─ OffsetInteger\n│  ├─ OffsetInteger\n│  ├─ Signed\n│  │  ├─ BigInt\n│  │  ├─ Int128\n│  │  ├─ Int16\n│  │  ├─ Int32\n│  │  ├─ Int64\n│  │  └─ Int8\n│  └─ Unsigned\n│     ├─ UInt128\n│     ├─ UInt16\n│     ├─ UInt32\n│     ├─ UInt64\n│     └─ UInt8\n├─ Rational\n├─ SimpleRatio\n├─ PValue\n└─ TestStat\n```\n:::\n:::\n\n\n#### Getting the Parent Type\n\nTo find the immediate supertype (parent type) of a specific type, you can use the `supertype()` function. Here’s an example:\n\n::: {#d704cb29 .cell execution_count=12}\n``` {.julia .cell-code}\nsupertype(Int64)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\nSigned\n```\n:::\n:::\n\n\nThis will return the immediate parent type of `Int64`.\n\n#### Getting the List of All Parent Types\n\nTo get the entire chain of parent types, you can use the `supertypes()` function, which directly returns all the parent types of a given type. Here's an example that shows how to do this for `Float64`:\n\n::: {#d16c48fd .cell execution_count=13}\n``` {.julia .cell-code}\nsupertypes(Float64)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n(Float64, AbstractFloat, Real, Number, Any)\n```\n:::\n:::\n\n\nThis code will return the list of all parent types of `Float64`, starting from `Float64` itself and going up the type hierarchy to `Any`. This can be useful for understanding the relationships between different types in Julia. To print the list of parent types in a more readable format, you can use the `join` function:\n\n::: {#c5f40c67 .cell execution_count=14}\n``` {.julia .cell-code}\njoin(supertypes(Float64), \" -> \")\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n\"Float64 -> AbstractFloat -> Real -> Number -> Any\"\n```\n:::\n:::\n\n\n### Type Hierarchies and Performance\n\nThe type hierarchy plays a crucial role in enabling multiple dispatch in Julia, allowing for efficient method selection based on the types of function arguments. By organizing types into a well-defined hierarchy, Julia can quickly select the most specific method for a given operation, optimizing performance, especially in scientific and numerical computing.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Type Hierarchies in Julia\n\n\n\n::: {#10131e3e .cell execution_count=16}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=17}\n**Question 1. What is the purpose of an abstract type in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#31d155d0 .cell execution_count=17}\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<script>\nvar ID = \"2sDiPVBW\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='2sDiPVBW'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_2sDiPVBW\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_2sDiPVBW_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_2sDiPVBW\"\n           id=\"radio_2sDiPVBW_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It provides a blueprint for organizing related types but cannot be instantiated.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_2sDiPVBW_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_2sDiPVBW\"\n           id=\"radio_2sDiPVBW_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It is used for type annotations in functions.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_2sDiPVBW_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_2sDiPVBW\"\n           id=\"radio_2sDiPVBW_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It defines a concrete implementation for other types.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_2sDiPVBW_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_2sDiPVBW\"\n           id=\"radio_2sDiPVBW_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It can be instantiated and used directly.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='2sDiPVBW_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_2sDiPVBW').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_2sDiPVBW')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_2sDiPVBW\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('2sDiPVBW_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_2sDiPVBW\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_2sDiPVBW\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#f969ed44 .cell execution_count=18}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=19}\n**Question 2. Which of the following types is a concrete type?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#6e70da15 .cell execution_count=19}\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<script>\nvar ID = \"17QhLY9T\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='17QhLY9T'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_17QhLY9T\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_17QhLY9T_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_17QhLY9T\"\n           id=\"radio_17QhLY9T_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        AbstractFloat\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_17QhLY9T_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_17QhLY9T\"\n           id=\"radio_17QhLY9T_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        Real\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_17QhLY9T_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_17QhLY9T\"\n           id=\"radio_17QhLY9T_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        Int64\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_17QhLY9T_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_17QhLY9T\"\n           id=\"radio_17QhLY9T_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Number\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='17QhLY9T_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_17QhLY9T').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_17QhLY9T')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_17QhLY9T\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('17QhLY9T_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_17QhLY9T\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_17QhLY9T\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#047f550b .cell execution_count=20}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=21}\n**Question 3. What does the `isconcretetype` function return for `AbstractFloat`?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#3d75d668 .cell execution_count=21}\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<script>\nvar ID = \"7ernTyvT\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='7ernTyvT'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_7ernTyvT\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7ernTyvT_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7ernTyvT\"\n           id=\"radio_7ernTyvT_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        null\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7ernTyvT_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7ernTyvT\"\n           id=\"radio_7ernTyvT_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        true\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7ernTyvT_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7ernTyvT\"\n           id=\"radio_7ernTyvT_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        false\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7ernTyvT_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7ernTyvT\"\n           id=\"radio_7ernTyvT_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Error: Undefined type\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='7ernTyvT_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_7ernTyvT').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_7ernTyvT')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_7ernTyvT\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('7ernTyvT_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_7ernTyvT\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_7ernTyvT\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#0c308b5e .cell execution_count=22}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=23}\n**Question 4. What will the following code return?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\ntypeof(42)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#9c3b293d .cell execution_count=23}\n\n::: {.cell-output .cell-output-display execution_count=24}\n```{=html}\n<script>\nvar ID = \"pFth7HbA\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='pFth7HbA'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_pFth7HbA\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_pFth7HbA_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_pFth7HbA\"\n           id=\"radio_pFth7HbA_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        Integer\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_pFth7HbA_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_pFth7HbA\"\n           id=\"radio_pFth7HbA_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        Number\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_pFth7HbA_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_pFth7HbA\"\n           id=\"radio_pFth7HbA_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        Real\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_pFth7HbA_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_pFth7HbA\"\n           id=\"radio_pFth7HbA_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Int64\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='pFth7HbA_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_pFth7HbA').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_pFth7HbA')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_pFth7HbA\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('pFth7HbA_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_pFth7HbA\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_pFth7HbA\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#7ab8cf11 .cell execution_count=24}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=25}\n**Question 5. What is the purpose of the `isa` operator in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#349011b1 .cell execution_count=25}\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<script>\nvar ID = \"j0eFIufa\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='j0eFIufa'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_j0eFIufa\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_j0eFIufa_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_j0eFIufa\"\n           id=\"radio_j0eFIufa_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        To check if a variable is an instance of a specific type or any of its subtypes.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_j0eFIufa_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_j0eFIufa\"\n           id=\"radio_j0eFIufa_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        To check if a variable&#39;s value matches a specific type.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_j0eFIufa_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_j0eFIufa\"\n           id=\"radio_j0eFIufa_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        To check if a variable is a subtype of <code>Any</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_j0eFIufa_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_j0eFIufa\"\n           id=\"radio_j0eFIufa_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        To check if a type is concrete.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='j0eFIufa_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_j0eFIufa').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_j0eFIufa')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_j0eFIufa\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('j0eFIufa_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_j0eFIufa\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_j0eFIufa\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#322e156d .cell execution_count=26}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=27}\n**Question 6. What will be the result of the following code?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nInt64 <: Real\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#5476b3f0 .cell execution_count=27}\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<script>\nvar ID = \"GUDISpMy\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='GUDISpMy'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_GUDISpMy\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_GUDISpMy_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_GUDISpMy\"\n           id=\"radio_GUDISpMy_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        true\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_GUDISpMy_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_GUDISpMy\"\n           id=\"radio_GUDISpMy_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        false\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_GUDISpMy_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_GUDISpMy\"\n           id=\"radio_GUDISpMy_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        Error: Type mismatch\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_GUDISpMy_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_GUDISpMy\"\n           id=\"radio_GUDISpMy_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        true for Float64 but not for Int64\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='GUDISpMy_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_GUDISpMy').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_GUDISpMy')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_GUDISpMy\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('GUDISpMy_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_GUDISpMy\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_GUDISpMy\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#d61b6bcb .cell execution_count=28}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=29}\n**Question 7. What will the following code return?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nisconcretetype(Int64)\nisconcretetype(AbstractFloat)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#9c1d4c75 .cell execution_count=29}\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<script>\nvar ID = \"W2ntmPOb\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='W2ntmPOb'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_W2ntmPOb\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_W2ntmPOb_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_W2ntmPOb\"\n           id=\"radio_W2ntmPOb_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        true for AbstractFloat and false for Int64\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_W2ntmPOb_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_W2ntmPOb\"\n           id=\"radio_W2ntmPOb_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        false for both types if using a different syntax\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_W2ntmPOb_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_W2ntmPOb\"\n           id=\"radio_W2ntmPOb_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        true for Int64 and false for AbstractFloat\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_W2ntmPOb_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_W2ntmPOb\"\n           id=\"radio_W2ntmPOb_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        false for both types\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='W2ntmPOb_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_W2ntmPOb').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_W2ntmPOb')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_W2ntmPOb\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('W2ntmPOb_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_W2ntmPOb\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_W2ntmPOb\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#36761243 .cell execution_count=30}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=31}\n**Question 8. What does the `<:` operator check in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#ee01c92c .cell execution_count=31}\n\n::: {.cell-output .cell-output-display execution_count=32}\n```{=html}\n<script>\nvar ID = \"7YoCduMB\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='7YoCduMB'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_7YoCduMB\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7YoCduMB_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7YoCduMB\"\n           id=\"radio_7YoCduMB_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        If a type can be instantiated.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7YoCduMB_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7YoCduMB\"\n           id=\"radio_7YoCduMB_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        If two types are exactly the same.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7YoCduMB_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7YoCduMB\"\n           id=\"radio_7YoCduMB_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        If a type is abstract.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_7YoCduMB_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_7YoCduMB\"\n           id=\"radio_7YoCduMB_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        If one type is a subtype of another.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='7YoCduMB_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_7YoCduMB').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_7YoCduMB')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_7YoCduMB\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('7YoCduMB_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_7YoCduMB\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_7YoCduMB\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#4a6a35d0 .cell execution_count=32}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=33}\n**Question 9. What is the result of the following code?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nsubtypes(Real)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#e4c45e63 .cell execution_count=33}\n\n::: {.cell-output .cell-output-display execution_count=34}\n```{=html}\n<script>\nvar ID = \"hhOAYZWB\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='hhOAYZWB'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_hhOAYZWB\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_hhOAYZWB_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_hhOAYZWB\"\n           id=\"radio_hhOAYZWB_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        Returns a list of all types that are subtypes of <code>Real</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_hhOAYZWB_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_hhOAYZWB\"\n           id=\"radio_hhOAYZWB_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        Returns an error because <code>Real</code> is abstract.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_hhOAYZWB_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_hhOAYZWB\"\n           id=\"radio_hhOAYZWB_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        Returns <code>Any</code> as the only subtype of <code>Real</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_hhOAYZWB_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_hhOAYZWB\"\n           id=\"radio_hhOAYZWB_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Shows <code>Real</code> as a parent type with no subtypes.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='hhOAYZWB_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_hhOAYZWB').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_hhOAYZWB')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_hhOAYZWB\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('hhOAYZWB_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_hhOAYZWB\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_hhOAYZWB\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#c2a0f4fb .cell execution_count=34}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=35}\n**Question 10. What does the `supertype` function return for `Float64`?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nsupertype(Float64)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#ec412fb2 .cell execution_count=35}\n\n::: {.cell-output .cell-output-display execution_count=36}\n```{=html}\n<script>\nvar ID = \"RGnd3pvr\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='RGnd3pvr'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_RGnd3pvr\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_RGnd3pvr_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_RGnd3pvr\"\n           id=\"radio_RGnd3pvr_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        Number\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_RGnd3pvr_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_RGnd3pvr\"\n           id=\"radio_RGnd3pvr_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        AbstractFloat\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_RGnd3pvr_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_RGnd3pvr\"\n           id=\"radio_RGnd3pvr_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        Real\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_RGnd3pvr_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_RGnd3pvr\"\n           id=\"radio_RGnd3pvr_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Int\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='RGnd3pvr_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_RGnd3pvr').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_RGnd3pvr')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_RGnd3pvr\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('RGnd3pvr_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_RGnd3pvr\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_RGnd3pvr\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n:::\n\n## Type Annotations and Declarations\n\nIn Julia, you can specify types for variables, function arguments, and return values. Type annotations help to provide clarity in your code, and in some cases, they can enable Julia’s just-in-time (JIT) compiler to generate more efficient code. While type annotations are optional, they are recommended for improving code readability and performance.\n\n### Variable Type Annotations\n\nYou can explicitly declare the type of a variable by using a type annotation:\n\n::: {#84c02a76 .cell execution_count=36}\n``` {.julia .cell-code}\nx::Int = 10  # x is an integer\ny::Float64 = 3.14  # y is a Float64\nnothing #| hide\n```\n:::\n\n\nIn this example, `x` is explicitly declared as an integer (`Int`), and `y` is declared as a `Float64`. Type annotations can also be used with mutable and immutable structs.\n\n### Function Argument Type Annotations\n\nYou can specify types for function arguments to ensure that the function only accepts values of a specific type:\n\n::: {#527b3ebe .cell execution_count=37}\n``` {.julia .cell-code}\nfunction add(a::Int, b::Int)\n    return a + b\nend\n\n@myshow begin #| hide\nadd(3, 4)\nadd(3, \"4\")  # Error: \"4\" is a String, not an Int\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> add(3, 4) = 7\njulia> add(3, \"4\")\n```\n:::\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>MethodError: no method matching add(::Int64, ::String)\nThe function `add` exists, but no method is defined for this combination of argument types.\n\nClosest candidates are:\n  add(::Int64, <span class=\"ansi-bright-red-fg\">::Int64</span>)\n<span class=\"ansi-bright-black-fg\">   @</span> <span class=\"ansi-magenta-fg\">Main</span> <span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">In[38]:1</span>\n\n\nStacktrace:\n [1] <span class=\"ansi-bold\">macro expansion</span>\n<span class=\"ansi-bright-black-fg\">   @</span> <span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">show.jl:1232</span><span class=\"ansi-bright-black-fg\"> [inlined]</span>\n [2] <span class=\"ansi-bold\">macro expansion</span>\n<span class=\"ansi-bright-black-fg\">   @</span> <span class=\"ansi-bright-black-fg\">~/Courses/julia/course-tse-julia/assets/julia/</span><span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">myshow.jl:82</span><span class=\"ansi-bright-black-fg\"> [inlined]</span>\n [3] top-level scope\n<span class=\"ansi-bright-black-fg\">   @</span> <span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">In[38]:7</span></pre>\n```\n:::\n\n:::\n:::\n\n\nIn the above example, `a` and `b` must both be `Int`s. If you try to pass a value of the wrong type (like `\"4\"`), Julia will throw an error.\n\n### Return Type Annotations\n\nYou can also annotate the return type of a function:\n\n::: {#aa62f1f2 .cell execution_count=38}\n``` {.julia .cell-code}\nfunction multiply(a::Int, b::Int)::Int\n    return a * b\nend\nnothing #| hide\n```\n:::\n\n\nHere, the function `multiply` is declared to return an `Int`, ensuring that the result will always be an integer.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Type Annotations and Declarations in Julia\n\n\n\n::: {#0ac3ed09 .cell execution_count=40}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=41}\n**Question 1. What is the primary purpose of type annotations in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#a26e7705 .cell execution_count=41}\n\n::: {.cell-output .cell-output-display execution_count=42}\n```{=html}\n<script>\nvar ID = \"zBzbvVmE\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='zBzbvVmE'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_zBzbvVmE\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zBzbvVmE_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zBzbvVmE\"\n           id=\"radio_zBzbvVmE_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        To specify the exact memory address of a variable.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zBzbvVmE_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zBzbvVmE\"\n           id=\"radio_zBzbvVmE_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        To provide clarity in the code and enable optimizations by the compiler.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zBzbvVmE_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zBzbvVmE\"\n           id=\"radio_zBzbvVmE_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        To make code run faster by skipping type checks.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zBzbvVmE_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zBzbvVmE\"\n           id=\"radio_zBzbvVmE_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        To prevent errors from occurring in the code.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='zBzbvVmE_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_zBzbvVmE').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_zBzbvVmE')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_zBzbvVmE\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('zBzbvVmE_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_zBzbvVmE\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_zBzbvVmE\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#43269b02 .cell execution_count=42}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=43}\n**Question 2. Which of the following correctly applies a type annotation to a variable?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#8a47d3a2 .cell execution_count=43}\n\n::: {.cell-output .cell-output-display execution_count=44}\n```{=html}\n<script>\nvar ID = \"AcsibPmY\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='AcsibPmY'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_AcsibPmY\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_AcsibPmY_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_AcsibPmY\"\n           id=\"radio_AcsibPmY_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        a:Int &#61; 10\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_AcsibPmY_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_AcsibPmY\"\n           id=\"radio_AcsibPmY_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        a::Int &#61; 10\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_AcsibPmY_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_AcsibPmY\"\n           id=\"radio_AcsibPmY_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        a &#61; 10::Int\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_AcsibPmY_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_AcsibPmY\"\n           id=\"radio_AcsibPmY_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Int::a &#61; 10\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='AcsibPmY_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_AcsibPmY').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_AcsibPmY')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_AcsibPmY\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('AcsibPmY_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_AcsibPmY\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_AcsibPmY\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#af3c7d19 .cell execution_count=44}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=45}\n**Question 3. What will happen if the following code is executed?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction add(a::Int, b::Int)\n    return a + b\nend\n\nadd(3, \"4\")\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#605380c0 .cell execution_count=45}\n\n::: {.cell-output .cell-output-display execution_count=46}\n```{=html}\n<script>\nvar ID = \"8IZAVZct\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='8IZAVZct'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_8IZAVZct\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8IZAVZct_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8IZAVZct\"\n           id=\"radio_8IZAVZct_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw a type error because <code>&quot;4&quot;</code> is a String, not an Int.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8IZAVZct_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8IZAVZct\"\n           id=\"radio_8IZAVZct_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will convert &quot;4&quot; to an Int and return 7.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8IZAVZct_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8IZAVZct\"\n           id=\"radio_8IZAVZct_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will ignore the type annotation and return 7.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8IZAVZct_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8IZAVZct\"\n           id=\"radio_8IZAVZct_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw a syntax error.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='8IZAVZct_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_8IZAVZct').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_8IZAVZct')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_8IZAVZct\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('8IZAVZct_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_8IZAVZct\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_8IZAVZct\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#9c567120 .cell execution_count=46}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=47}\n**Question 4. In Julia, what will the following code output?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction multiply(a::Int, b::Int)::Int\n    return a * b\nend\nmultiply(3, 4)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#a993bd19 .cell execution_count=47}\n\n::: {.cell-output .cell-output-display execution_count=48}\n```{=html}\n<script>\nvar ID = \"wsbdUlYa\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='wsbdUlYa'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_wsbdUlYa\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_wsbdUlYa_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_wsbdUlYa\"\n           id=\"radio_wsbdUlYa_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        12\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_wsbdUlYa_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_wsbdUlYa\"\n           id=\"radio_wsbdUlYa_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        12.0\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_wsbdUlYa_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_wsbdUlYa\"\n           id=\"radio_wsbdUlYa_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        Nothing\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_wsbdUlYa_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_wsbdUlYa\"\n           id=\"radio_wsbdUlYa_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Error: Incorrect type\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='wsbdUlYa_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_wsbdUlYa').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_wsbdUlYa')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_wsbdUlYa\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('wsbdUlYa_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_wsbdUlYa\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_wsbdUlYa\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n:::\n\n## Parametric Types\n\nParametric types in Julia allow you to create types that can work with multiple data types, providing flexibility and enabling generic programming. This is particularly useful when you want to create functions, structs, or methods that can handle various types without needing to duplicate code.\n\n### Parametric Composite Types\n\nA parametric struct can take one or more type parameters:\n\n::: {#7600dd88 .cell execution_count=48}\n``` {.julia .cell-code}\nstruct Pair{T, S}\n    first::T\n    second::S\nend\n\n@myshow begin #| hide\npair1 = Pair(1, \"apple\")  # Pair of Int and String\npair2 = Pair(3.14, true)  # Pair of Float64 and Bool\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> pair1 = Pair{Int64, String}(1, \"apple\")\njulia> pair2 = Pair{Float64, Bool}(3.14, true)\n```\n:::\n:::\n\n\nIn this case, `Pair` can be instantiated with any two types `T` and `S`, making it more versatile.\n\n### Parametric Abstract Types\n\nParametric abstract types allow you to define abstract types that are parameterized by other types.\n\n#### Syntax:\n\n```julia\nabstract type AbstractContainer{T} end\n```\n\nHere, `AbstractContainer` is an abstract type that takes a type parameter `T`. Any concrete type that is a subtype of `AbstractContainer` can specify the concrete type for `T`.\n\n#### Example:\n\n::: {#8cb33a82 .cell execution_count=49}\n``` {.julia .cell-code}\nabstract type AbstractContainer{T} end\n\nstruct VectorContainer{T} <: AbstractContainer{T}\n    data::Vector{T}\nend\n\nstruct SetContainer{T} <: AbstractContainer{T}\n    data::Set{T}\nend\n\nstruct FloatVectorContainer <: AbstractContainer{Float64}\n    data::Vector{Float64}\nend\n\nfunction print_container_info(container::AbstractContainer{T}) where T\n    println(\"Container holds values of type: \", T)\nend\n\n# Usage:\nvec = VectorContainer([1, 2, 3])\nset = SetContainer(Set([1, 2, 3]))\nflo = FloatVectorContainer([1.0, 2.0, 3.0])\n\nprint_container_info(vec)\nprint_container_info(set)\nprint_container_info(flo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nContainer holds values of type: Int64\nContainer holds values of type: Int64\nContainer holds values of type: Float64\n```\n:::\n:::\n\n\n#### Explanation:\n\n- `AbstractContainer{T}` is a parametric abstract type, where `T` represents the type of elements contained within the container.\n- `VectorContainer` and `SetContainer` are concrete subtypes of `AbstractContainer`, each using a different data structure (`Vector` and `Set`) to store elements of type `T`.\n- `FloatVectorContainer` is a concrete subtype of `AbstractContainer` that specifies `Float64` as the type for `T`.\n- The function `print_container_info` accepts any container that is a subtype of `AbstractContainer` and prints the type of elements inside the container.\n\n### Constrained Parametric Types\n\nConstrained parametric types allow you to restrict acceptable type parameters using `<:`, ensuring greater control and type safety.\n\n::: {#6c6cb013 .cell execution_count=50}\n``` {.julia .cell-code}\nstruct RealPair{T <: Real}\n    first::T\n    second::T\nend\n\n# Valid:\npair = RealPair(1.0, 2.5)\n\n# Constraining a function:****\nfunction sum_elements(container::AbstractContainer{T}) where T <: Real\n    return sum(container.data)\nend\n\nvec = VectorContainer([1.0, 2.0, 3.0])\nprintln(sum_elements(vec))  # Outputs: 6.0\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6.0\n```\n:::\n:::\n\n\nIn this example, `RealPair` is a struct that only accepts type parameters that are subtypes of `Real`. Similarly, the `sum_elements` function only works with containers that hold elements of type `T` that are subtypes of `Real`. The following code will throw an error because `String` is not a subtype of `Real`:\n\n::: {#134e7b97 .cell execution_count=51}\n``` {.julia .cell-code}\n# Invalid (throws an error):\ninvalid_pair = RealPair(\"a\", \"b\")\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>MethodError: no method matching RealPair(::String, ::String)\nThe type `RealPair` exists, but no method is defined for this combination of argument types when trying to construct it.\n\nClosest candidates are:\n  RealPair(<span class=\"ansi-bright-red-fg\">::T</span>, <span class=\"ansi-bright-red-fg\">::T</span>) where T&lt;:Real\n<span class=\"ansi-bright-black-fg\">   @</span> <span class=\"ansi-magenta-fg\">Main</span> <span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">In[51]:2</span>\n\n\nStacktrace:\n [1] top-level scope\n<span class=\"ansi-bright-black-fg\">   @</span> <span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">In[52]:2</span></pre>\n```\n:::\n\n:::\n:::\n\n\nConstraints enhance type safety, clarify requirements, and support robust generic programming.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Parametric Types in Julia\n\n\n\n::: {#aec6f62e .cell execution_count=53}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=54}\n**Question 1. What is a parametric type in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#16113d1b .cell execution_count=54}\n\n::: {.cell-output .cell-output-display execution_count=55}\n```{=html}\n<script>\nvar ID = \"WQ5bcHtF\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='WQ5bcHtF'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_WQ5bcHtF\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_WQ5bcHtF_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_WQ5bcHtF\"\n           id=\"radio_WQ5bcHtF_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that is defined for a specific data type.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_WQ5bcHtF_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_WQ5bcHtF\"\n           id=\"radio_WQ5bcHtF_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that can only work with abstract types.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_WQ5bcHtF_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_WQ5bcHtF\"\n           id=\"radio_WQ5bcHtF_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that doesn&#39;t require any parameters.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_WQ5bcHtF_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_WQ5bcHtF\"\n           id=\"radio_WQ5bcHtF_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that can work with multiple data types, specified by parameters.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='WQ5bcHtF_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_WQ5bcHtF').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_WQ5bcHtF')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_WQ5bcHtF\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('WQ5bcHtF_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_WQ5bcHtF\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_WQ5bcHtF\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#041cf38a .cell execution_count=55}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=56}\n**Question 2. What is the role of `T` and `S` in the `Pair` struct example?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nstruct Pair{T, S}\n    first::T\n    second::S\nend\n\npair1 = Pair(1, \"apple\")  # Pair of Int and String\npair2 = Pair(3.14, true)  # Pair of Float64 and Bool\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#f430f34f .cell execution_count=56}\n\n::: {.cell-output .cell-output-display execution_count=57}\n```{=html}\n<script>\nvar ID = \"nYTE3QmV\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='nYTE3QmV'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_nYTE3QmV\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_nYTE3QmV_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_nYTE3QmV\"\n           id=\"radio_nYTE3QmV_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        <code>T</code> and <code>S</code> define the data types of the first and second elements of the pair.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_nYTE3QmV_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_nYTE3QmV\"\n           id=\"radio_nYTE3QmV_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        <code>T</code> and <code>S</code> are unused in this case, they are placeholders.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_nYTE3QmV_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_nYTE3QmV\"\n           id=\"radio_nYTE3QmV_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        <code>T</code> is used for the first element, and <code>S</code> is used for the second element.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_nYTE3QmV_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_nYTE3QmV\"\n           id=\"radio_nYTE3QmV_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        <code>T</code> defines the data type of both elements in the pair.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='nYTE3QmV_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_nYTE3QmV').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_nYTE3QmV')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_nYTE3QmV\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('nYTE3QmV_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_nYTE3QmV\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_nYTE3QmV\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#d043fc47 .cell execution_count=57}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=58}\n**Question 3. What happens when you instantiate `Pair(1, 'apple')` in the provided code?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\npair1 = Pair(1, \"apple\")  # Pair of Int and String\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#e0dd97e8 .cell execution_count=58}\n\n::: {.cell-output .cell-output-display execution_count=59}\n```{=html}\n<script>\nvar ID = \"kFssF1gS\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='kFssF1gS'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_kFssF1gS\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kFssF1gS_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kFssF1gS\"\n           id=\"radio_kFssF1gS_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will create a pair with <code>Int64</code> and <code>String</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kFssF1gS_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kFssF1gS\"\n           id=\"radio_kFssF1gS_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will create a pair with an <code>Int</code> and a <code>String</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kFssF1gS_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kFssF1gS\"\n           id=\"radio_kFssF1gS_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will cause a runtime error because the types don&#39;t match.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kFssF1gS_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kFssF1gS\"\n           id=\"radio_kFssF1gS_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw an error because <code>Int</code> and <code>String</code> can&#39;t be combined.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='kFssF1gS_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_kFssF1gS').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_kFssF1gS')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_kFssF1gS\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('kFssF1gS_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_kFssF1gS\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_kFssF1gS\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#f03c84e8 .cell execution_count=59}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=60}\n**Question 4. What is the benefit of using parametric types like `AbstractContainer{T}`?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nabstract type AbstractContainer{T} end\n\nstruct VectorContainer{T} <: AbstractContainer{T}\n    data::Vector{T}\nend\n\nstruct SetContainer{T} <: AbstractContainer{T}\n    data::Set{T}\nend\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#be0daf87 .cell execution_count=60}\n\n::: {.cell-output .cell-output-display execution_count=61}\n```{=html}\n<script>\nvar ID = \"Y249t8E5\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='Y249t8E5'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_Y249t8E5\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_Y249t8E5_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_Y249t8E5\"\n           id=\"radio_Y249t8E5_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It allows you to create types that can handle any type of data, with type safety.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_Y249t8E5_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_Y249t8E5\"\n           id=\"radio_Y249t8E5_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It allows you to specify concrete types directly in the struct.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_Y249t8E5_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_Y249t8E5\"\n           id=\"radio_Y249t8E5_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It makes the code less flexible and more specific.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_Y249t8E5_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_Y249t8E5\"\n           id=\"radio_Y249t8E5_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It makes the code more complex and harder to maintain.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='Y249t8E5_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_Y249t8E5').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_Y249t8E5')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_Y249t8E5\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('Y249t8E5_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_Y249t8E5\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_Y249t8E5\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#48a1e116 .cell execution_count=61}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=62}\n**Question 5. What does the `print_container_info` function do?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction print_container_info(container::AbstractContainer{T}) where T\n    println(\"Container holds values of type: \", T)\nend\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#81864739 .cell execution_count=62}\n\n::: {.cell-output .cell-output-display execution_count=63}\n```{=html}\n<script>\nvar ID = \"A1qifUUh\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='A1qifUUh'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_A1qifUUh\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_A1qifUUh_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_A1qifUUh\"\n           id=\"radio_A1qifUUh_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It returns the type of the container.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_A1qifUUh_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_A1qifUUh\"\n           id=\"radio_A1qifUUh_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It prints the number of elements in the container.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_A1qifUUh_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_A1qifUUh\"\n           id=\"radio_A1qifUUh_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It prints the type of the container.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_A1qifUUh_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_A1qifUUh\"\n           id=\"radio_A1qifUUh_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It prints the values inside the container.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='A1qifUUh_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_A1qifUUh').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_A1qifUUh')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_A1qifUUh\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('A1qifUUh_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_A1qifUUh\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_A1qifUUh\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#6642e752 .cell execution_count=63}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=64}\n**Question 6. What is the purpose of `AbstractContainer{T}` in the code example?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nabstract type AbstractContainer{T} end\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#5b6629ea .cell execution_count=64}\n\n::: {.cell-output .cell-output-display execution_count=65}\n```{=html}\n<script>\nvar ID = \"kZJVfhmJ\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='kZJVfhmJ'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_kZJVfhmJ\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kZJVfhmJ_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kZJVfhmJ\"\n           id=\"radio_kZJVfhmJ_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It defines a container for a specific type of data.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kZJVfhmJ_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kZJVfhmJ\"\n           id=\"radio_kZJVfhmJ_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It defines a concrete container type.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kZJVfhmJ_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kZJVfhmJ\"\n           id=\"radio_kZJVfhmJ_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It restricts containers to hold only numeric types.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_kZJVfhmJ_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_kZJVfhmJ\"\n           id=\"radio_kZJVfhmJ_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It defines an abstract type that can be used to create containers for any data type <code>T</code>.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='kZJVfhmJ_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_kZJVfhmJ').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_kZJVfhmJ')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_kZJVfhmJ\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('kZJVfhmJ_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_kZJVfhmJ\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_kZJVfhmJ\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#1cc56e09 .cell execution_count=65}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=66}\n**Question 7. What would be the output of `print_container_info(vec)` if `vec` is `VectorContainer([1, 2, 3])`?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nvec = VectorContainer([1, 2, 3])\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#79c8f968 .cell execution_count=66}\n\n::: {.cell-output .cell-output-display execution_count=67}\n```{=html}\n<script>\nvar ID = \"YkdRlMKq\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='YkdRlMKq'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_YkdRlMKq\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YkdRlMKq_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YkdRlMKq\"\n           id=\"radio_YkdRlMKq_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will print the values inside the container.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YkdRlMKq_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YkdRlMKq\"\n           id=\"radio_YkdRlMKq_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will print the type <code>AbstractContainer&#123;Int&#125;</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YkdRlMKq_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YkdRlMKq\"\n           id=\"radio_YkdRlMKq_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw an error because <code>VectorContainer</code> is not defined.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YkdRlMKq_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YkdRlMKq\"\n           id=\"radio_YkdRlMKq_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will print the type <code>Vector&#123;Int&#125;</code>.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='YkdRlMKq_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_YkdRlMKq').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_YkdRlMKq')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_YkdRlMKq\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('YkdRlMKq_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_YkdRlMKq\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_YkdRlMKq\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#1e2e3245 .cell execution_count=67}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=68}\n**Question 8. How does using parametric types help with code reusability?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#a3ba9a22 .cell execution_count=68}\n\n::: {.cell-output .cell-output-display execution_count=69}\n```{=html}\n<script>\nvar ID = \"YesZjOgc\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='YesZjOgc'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_YesZjOgc\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YesZjOgc_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YesZjOgc\"\n           id=\"radio_YesZjOgc_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It forces you to create new types for every use case.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YesZjOgc_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YesZjOgc\"\n           id=\"radio_YesZjOgc_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It makes the code less reusable.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YesZjOgc_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YesZjOgc\"\n           id=\"radio_YesZjOgc_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It requires more boilerplate code.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_YesZjOgc_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_YesZjOgc\"\n           id=\"radio_YesZjOgc_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It reduces the need to define separate functions for different data types.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='YesZjOgc_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_YesZjOgc').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_YesZjOgc')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_YesZjOgc\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('YesZjOgc_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_YesZjOgc\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_YesZjOgc\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: \n\n## Type Conversion and Promotion\n\nIn Julia, type conversion and promotion are mechanisms that allow for flexibility when working with different types, enabling smooth interactions and arithmetic between varying data types. Conversion changes the type of a value, while promotion ensures two values have a common type for an operation.\n\n### Type Conversion\n\nType conversion in Julia is typically achieved with the `convert` function, which tries to change a value from one type to another. For conversions between `Float64` and `Int`, methods like `round` and `floor` are commonly used to handle fractional parts safely. To convert numbers to strings, use the `string()` function instead.\n\n::: {#a178d68f .cell execution_count=69}\n``` {.julia .cell-code}\n@myshow begin #| hide\nround(Int, 3.84)   \nfloor(Int, 3.14)\nconvert(Float64, 5)\nstring(123)\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> round(Int, 3.84) = 4\njulia> floor(Int, 3.14) = 3\njulia> convert(Float64, 5) = 5.0\njulia> string(123) = \"123\"\n```\n:::\n:::\n\n\nIn these examples:\n\n- `round` rounds a `Float64` to the nearest `Int`.\n- `floor` converts a `Float64` to the nearest lower `Int`.\n- Converting an `Int` to `Float64` represents the integer as a floating-point number.\n- `string()` converts an integer to its string representation.\n\n### Automatic Conversion\n\nIn many cases, Julia will automatically convert types when it is unambiguous. For instance, you can directly assign an integer to a floating-point variable, and Julia will automatically convert it.\n\n::: {#518f9185 .cell execution_count=70}\n``` {.julia .cell-code}\n@myshow begin #| hide\ny::Float64 = 10  # The integer 10 is converted to 10.0 (Float64)\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> y::Float64 = 10.0\n```\n:::\n:::\n\n\n### Type Promotion\n\nType promotion is used when combining two values of different types in an operation. Julia promotes values to a common type using the `promote` function, which returns values in their promoted type. This is useful when performing arithmetic on values of different types.\n\n::: {#150717bb .cell execution_count=71}\n``` {.julia .cell-code}\n@myshow begin #| hide\na, b = promote(3, 4.5)  # Promotes both values to Float64\ntypeof(a)\ntypeof(b)\nend #| hide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njulia> (a, b) = (3.0, 4.5)\njulia> typeof(a) = Float64\njulia> typeof(b) = Float64\n```\n:::\n:::\n\n\nIn this example, `promote` converts both `3` (an `Int`) and `4.5` (a `Float64`) to `Float64` so they can be added, subtracted, or multiplied without any type conflicts. \n\n::: {.callout-warning}\nBe aware that promotion has nothing to do with the type hierarchy. For instance, although every `Int` value can also be represented as a `Float64` value, `Int` is not a subtype of `Float64`.\n:::\n\n### Summary\n\n- `convert(Type, value)`: Converts `value` to the specified `Type`, if possible.\n- `promote(x, y)`: Returns both `x` and `y` promoted to a common type.\n- Type promotion rules allow Julia to handle operations between different types smoothly, making the language both powerful and flexible for numerical and data processing tasks.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Type Conversion and Promotion in Julia\n\n\n\n::: {#87c293b4 .cell execution_count=73}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=74}\n**Question 1. What does the `convert` function do in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#2f01ef40 .cell execution_count=74}\n\n::: {.cell-output .cell-output-display execution_count=75}\n```{=html}\n<script>\nvar ID = \"CItf3hn7\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='CItf3hn7'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_CItf3hn7\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_CItf3hn7_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_CItf3hn7\"\n           id=\"radio_CItf3hn7_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It converts a value from one type to another, if possible.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_CItf3hn7_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_CItf3hn7\"\n           id=\"radio_CItf3hn7_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It converts numbers to strings.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_CItf3hn7_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_CItf3hn7\"\n           id=\"radio_CItf3hn7_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It automatically promotes values to a common type.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_CItf3hn7_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_CItf3hn7\"\n           id=\"radio_CItf3hn7_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It changes a value to a boolean type.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='CItf3hn7_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_CItf3hn7').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_CItf3hn7')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_CItf3hn7\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('CItf3hn7_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_CItf3hn7\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_CItf3hn7\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#7b359cdf .cell execution_count=75}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=76}\n**Question 2. What is the output of the following code?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nprintln(round(Int, 3.14))   # Rounds 3.14 to the nearest integer, output: 3\nprintln(floor(Int, 3.14))   # Floors 3.14 to the nearest integer, output: 3\nprintln(convert(Float64, 5))  # Converts Int to Float64, output: 5.0\nprintln(string(123))         # Converts Int to String, output: \"123\"\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#b1721f90 .cell execution_count=76}\n\n::: {.cell-output .cell-output-display execution_count=77}\n```{=html}\n<script>\nvar ID = \"DiulmICx\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='DiulmICx'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_DiulmICx\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_DiulmICx_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_DiulmICx\"\n           id=\"radio_DiulmICx_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        3, 3, 5.0, 123\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_DiulmICx_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_DiulmICx\"\n           id=\"radio_DiulmICx_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        5.0, 3, 5, &#39;123&#39;\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_DiulmICx_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_DiulmICx\"\n           id=\"radio_DiulmICx_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        3, 3.14, 5, &#39;123&#39;\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_DiulmICx_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_DiulmICx\"\n           id=\"radio_DiulmICx_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        3, 3, 5.0, &#39;123&#39;\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='DiulmICx_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_DiulmICx').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_DiulmICx')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_DiulmICx\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('DiulmICx_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_DiulmICx\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_DiulmICx\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#47a77723 .cell execution_count=77}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=78}\n**Question 3. What happens when an integer is assigned to a `Float64` variable in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\ny::Float64 = 10  # The integer 10 is automatically converted to 10.0 (Float64)\nprintln(y)       # Output: 10.0\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#dabaf550 .cell execution_count=78}\n\n::: {.cell-output .cell-output-display execution_count=79}\n```{=html}\n<script>\nvar ID = \"jNeOgD1e\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='jNeOgD1e'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_jNeOgD1e\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_jNeOgD1e_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_jNeOgD1e\"\n           id=\"radio_jNeOgD1e_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        Julia automatically converts the integer to a Float64.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_jNeOgD1e_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_jNeOgD1e\"\n           id=\"radio_jNeOgD1e_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        The conversion needs to be done explicitly using <code>convert</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_jNeOgD1e_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_jNeOgD1e\"\n           id=\"radio_jNeOgD1e_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        The variable <code>y</code> will be set to the integer value of 10.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_jNeOgD1e_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_jNeOgD1e\"\n           id=\"radio_jNeOgD1e_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Julia throws a type error because of the type mismatch.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='jNeOgD1e_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_jNeOgD1e').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_jNeOgD1e')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_jNeOgD1e\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('jNeOgD1e_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_jNeOgD1e\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_jNeOgD1e\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#d5610f53 .cell execution_count=79}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=80}\n**Question 4. What does the `promote` function do in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\na, b = promote(3, 4.5)  # Promotes both values to Float64\nprintln(a)              # Output: 3.0\nprintln(b)              # Output: 4.5\nprintln(typeof(a))      # Output: Float64\nprintln(typeof(b))      # Output: Float64\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#2e685694 .cell execution_count=80}\n\n::: {.cell-output .cell-output-display execution_count=81}\n```{=html}\n<script>\nvar ID = \"9LzU1Ax7\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='9LzU1Ax7'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_9LzU1Ax7\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_9LzU1Ax7_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_9LzU1Ax7\"\n           id=\"radio_9LzU1Ax7_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It checks if two values have the same type.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_9LzU1Ax7_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_9LzU1Ax7\"\n           id=\"radio_9LzU1Ax7_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It promotes two values to a common type for an operation.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_9LzU1Ax7_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_9LzU1Ax7\"\n           id=\"radio_9LzU1Ax7_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It converts values to strings for display.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_9LzU1Ax7_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_9LzU1Ax7\"\n           id=\"radio_9LzU1Ax7_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It converts both values to integers.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='9LzU1Ax7_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_9LzU1Ax7').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_9LzU1Ax7')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_9LzU1Ax7\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('9LzU1Ax7_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_9LzU1Ax7\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_9LzU1Ax7\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#f906c016 .cell execution_count=81}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=82}\n**Question 5. What will happen if we try to add an `Int` and a `String` in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nprintln(3 + \"Hello\")  # Attempting to add Int and String\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#42b9a475 .cell execution_count=82}\n\n::: {.cell-output .cell-output-display execution_count=83}\n```{=html}\n<script>\nvar ID = \"TuQ03ZlM\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='TuQ03ZlM'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_TuQ03ZlM\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_TuQ03ZlM_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_TuQ03ZlM\"\n           id=\"radio_TuQ03ZlM_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw a type error.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_TuQ03ZlM_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_TuQ03ZlM\"\n           id=\"radio_TuQ03ZlM_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will concatenate the string and the number.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_TuQ03ZlM_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_TuQ03ZlM\"\n           id=\"radio_TuQ03ZlM_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will promote the number to a string.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_TuQ03ZlM_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_TuQ03ZlM\"\n           id=\"radio_TuQ03ZlM_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        Julia will automatically convert both to a common type.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='TuQ03ZlM_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_TuQ03ZlM').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_TuQ03ZlM')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_TuQ03ZlM\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('TuQ03ZlM_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_TuQ03ZlM\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_TuQ03ZlM\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n:::\n\n\n## Union Types\n\nIn Julia, `Union` types are used to create variables or function arguments that can accept multiple types. This is particularly useful when you want to allow a function to work with multiple types without needing to write separate methods for each one.\n\nA `Union` type is created by specifying a list of types within `Union{}`. This allows a variable to hold values of any type listed in the union.\n\n::: {#a8656448 .cell execution_count=83}\n``` {.julia .cell-code}\nfunction process(x::Union{Int, Nothing})\n    println(\"The input is: \", x)\nend\n\nprocess(5)        # Works with an Int\nprocess(nothing)  # Works with nothing of type Nothing\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe input is: 5\nThe input is: nothing\n```\n:::\n:::\n\n\nIn this example, `process` can accept both `Int` and `Nothing` types, making it versatile across multiple input types.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Union Types in Julia\n\n\n\n::: {#73ef7459 .cell execution_count=85}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=86}\n**Question 1. What is a `Union` type in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#97d8d3ec .cell execution_count=86}\n\n::: {.cell-output .cell-output-display execution_count=87}\n```{=html}\n<script>\nvar ID = \"8PtHC0ei\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='8PtHC0ei'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_8PtHC0ei\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8PtHC0ei_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8PtHC0ei\"\n           id=\"radio_8PtHC0ei_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that can only accept floating-point numbers.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8PtHC0ei_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8PtHC0ei\"\n           id=\"radio_8PtHC0ei_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        A built-in function for type conversion.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8PtHC0ei_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8PtHC0ei\"\n           id=\"radio_8PtHC0ei_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that restricts a variable to only one type.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8PtHC0ei_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8PtHC0ei\"\n           id=\"radio_8PtHC0ei_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        A type that allows a variable to accept multiple types.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='8PtHC0ei_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_8PtHC0ei').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_8PtHC0ei')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_8PtHC0ei\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('8PtHC0ei_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_8PtHC0ei\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_8PtHC0ei\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#70b0949f .cell execution_count=87}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=88}\n**Question 2. What is the output of the following code?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction process_number(x::Union{Int, Float64})\n    println(\"The input is: \", x)\nend\n\nprocess_number(5)       # Works with an Int\nprocess_number(3.14)    # Works with a Float64\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#e707b0e1 .cell execution_count=88}\n\n::: {.cell-output .cell-output-display execution_count=89}\n```{=html}\n<script>\nvar ID = \"6mqNlRxW\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='6mqNlRxW'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_6mqNlRxW\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_6mqNlRxW_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_6mqNlRxW\"\n           id=\"radio_6mqNlRxW_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        The input is: 5, The input is: 3.14\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_6mqNlRxW_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_6mqNlRxW\"\n           id=\"radio_6mqNlRxW_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        The input is: 3.14, The input is: 5\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_6mqNlRxW_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_6mqNlRxW\"\n           id=\"radio_6mqNlRxW_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        The input is: 5, The input is: 3.0\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_6mqNlRxW_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_6mqNlRxW\"\n           id=\"radio_6mqNlRxW_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        The input is: 5, The input is: 3\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='6mqNlRxW_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_6mqNlRxW').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_6mqNlRxW')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_6mqNlRxW\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('6mqNlRxW_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_6mqNlRxW\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_6mqNlRxW\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#14fe86ec .cell execution_count=89}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=90}\n**Question 3. Which of the following scenarios would benefit from using a `Union` type?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\n# Example using Union to handle multiple types in a function\nfunction add_one(x::Union{Int, Float64})\n    return x + 1\nend\n\nprintln(add_one(3))     # Output: 4 (Int)\nprintln(add_one(2.5))   # Output: 3.5 (Float64)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#e5f4d3d5 .cell execution_count=90}\n\n::: {.cell-output .cell-output-display execution_count=91}\n```{=html}\n<script>\nvar ID = \"49vFYqwr\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='49vFYqwr'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_49vFYqwr\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_49vFYqwr_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_49vFYqwr\"\n           id=\"radio_49vFYqwr_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        When a function needs to accept both integers and floating-point numbers.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_49vFYqwr_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_49vFYqwr\"\n           id=\"radio_49vFYqwr_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        When a function accepts only integers.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_49vFYqwr_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_49vFYqwr\"\n           id=\"radio_49vFYqwr_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        When a function is only designed to accept floating-point numbers.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_49vFYqwr_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_49vFYqwr\"\n           id=\"radio_49vFYqwr_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        When there is a strict requirement to accept a specific type.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='49vFYqwr_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_49vFYqwr').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_49vFYqwr')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_49vFYqwr\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('49vFYqwr_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_49vFYqwr\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_49vFYqwr\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#cabc35fa .cell execution_count=91}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=92}\n**Question 4. What happens when a value of a type not listed in the `Union` is passed to a function?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction process_number(x::Union{Int, Float64})\n    println(\"The input is: \", x)\nend\n\nprocess_number(\"Hello\")  # Trying to pass a String\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#8f933783 .cell execution_count=92}\n\n::: {.cell-output .cell-output-display execution_count=93}\n```{=html}\n<script>\nvar ID = \"aJJH46MZ\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='aJJH46MZ'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_aJJH46MZ\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_aJJH46MZ_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_aJJH46MZ\"\n           id=\"radio_aJJH46MZ_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will automatically convert the string to an integer.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_aJJH46MZ_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_aJJH46MZ\"\n           id=\"radio_aJJH46MZ_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will work without issue because <code>String</code> is compatible with <code>Union</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_aJJH46MZ_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_aJJH46MZ\"\n           id=\"radio_aJJH46MZ_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw a <code>MethodError</code> because <code>String</code> is not part of the Union.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_aJJH46MZ_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_aJJH46MZ\"\n           id=\"radio_aJJH46MZ_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It will throw a <code>TypeError</code> due to the type mismatch.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='aJJH46MZ_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_aJJH46MZ').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_aJJH46MZ')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_aJJH46MZ\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('aJJH46MZ_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_aJJH46MZ\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_aJJH46MZ\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#82c19ee0 .cell execution_count=93}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=94}\n**Question 5. How does the `add_one` function handle both `Int` and `Float64` types?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction add_one(x::Union{Int, Float64})\n    return x + 1\nend\n\nprintln(add_one(3))     # Output: 4 (Int)\nprintln(add_one(2.5))   # Output: 3.5 (Float64)\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#755662f0 .cell execution_count=94}\n\n::: {.cell-output .cell-output-display execution_count=95}\n```{=html}\n<script>\nvar ID = \"IeRzuv4D\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='IeRzuv4D'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_IeRzuv4D\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IeRzuv4D_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IeRzuv4D\"\n           id=\"radio_IeRzuv4D_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It only works for <code>Float64</code> types.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IeRzuv4D_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IeRzuv4D\"\n           id=\"radio_IeRzuv4D_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It requires type checking before execution.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IeRzuv4D_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IeRzuv4D\"\n           id=\"radio_IeRzuv4D_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It throws an error for <code>Int</code> but works for <code>Float64</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IeRzuv4D_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IeRzuv4D\"\n           id=\"radio_IeRzuv4D_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It works for both types without needing separate methods.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='IeRzuv4D_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_IeRzuv4D').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_IeRzuv4D')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_IeRzuv4D\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('IeRzuv4D_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_IeRzuv4D\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_IeRzuv4D\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n:::\n\n## Special Types\n\nJulia provides several special types to handle different programming needs, including types for flexible assignments, missing values, and functions without specific return values.\n\n### `Nothing`\n\nThe `Nothing` type represents the absence of a meaningful value, commonly used when a function does not return anything. It’s similar to `void` in other programming languages. Functions in Julia that do not return a value explicitly return `nothing` by default.\n\n::: {#e898189b .cell execution_count=95}\n``` {.julia .cell-code}\n# Example of a function that returns `Nothing`\nfunction print_message(msg::String)\n    println(msg)\n    return nothing  # Explicitly returns `nothing`\nend\n\nresult = print_message(\"Hello!\")  # Returns `nothing`\nprintln(result === nothing)       # Output: true\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello!\ntrue\n```\n:::\n:::\n\n\nUsing `Nothing` is useful when you want to indicate that a function has no specific return value, yet you still want to call it as part of a larger program flow.\n\n### `Any`\n\n`Any` is the most general type in Julia and serves as the root of Julia’s type hierarchy. Declaring a variable or argument as `Any` allows it to hold values of any type, making it versatile but potentially less performant since Julia cannot infer a specific type.\n\n::: {#5ceed382 .cell execution_count=96}\n``` {.julia .cell-code}\n# Example of using `Any` as a type\nfunction describe(value::Any)\n    println(\"Value: \", value)\n    println(\"Type: \", typeof(value))\nend\n\ndescribe(42)         # Works with Int\ndescribe(\"Hello\")    # Works with String\ndescribe(3.14)       # Works with Float64\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nValue: 42\nType: Int64\nValue: Hello\nType: String\nValue: 3.14\nType: Float64\n```\n:::\n:::\n\n\nUsing `Any` can be beneficial when handling inputs of unpredictable types, such as in data processing functions where input data may be heterogeneous.\n\n### `Missing`\n\nThe `Missing` type is used to represent missing or unknown data, especially useful in data analysis. Julia’s `missing` value is an instance of `Missing` and can be assigned to variables or included in data structures like arrays and tables. Operations with `missing` generally propagate `missing` to indicate the presence of missing data.\n\n::: {#ba5d0dc6 .cell execution_count=97}\n``` {.julia .cell-code}\n# Example of using `missing` in an array\ndata = [1, 2, missing, 4, 5]\n\n# Check for missing values in the array\nfor item in data\n    if item === missing\n        println(\"Missing data detected.\")\n    else\n        println(\"Value: \", item)\n    end\nend\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nValue: 1\nValue: 2\nMissing data detected.\nValue: 4\nValue: 5\n```\n:::\n:::\n\n\nThe `missing` value enables handling of incomplete data in Julia programs without causing errors, making it especially useful in fields like data science.\n\nIn data analysis, you often want to perform calculations or operations on data while ignoring `missing` values. Julia provides the `skipmissing` function, which creates an iterator that skips over any `missing` values in a collection.\n\n::: {#e241821f .cell execution_count=98}\n``` {.julia .cell-code}\nusing Statistics\n\n# Example array with missing values\ndata = [1, 2, missing, 4, 5, missing, 7]\n\n# Summing values while skipping missing entries\nsum_no_missing = sum(skipmissing(data))\nprintln(\"Sum without missing values: \", sum_no_missing)  # Output: 19\n\n# Calculating the mean while skipping missing values\nmean_no_missing = mean(skipmissing(data))\nprintln(\"Mean without missing values: \", mean_no_missing)  # Output: 3.8\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSum without missing values: 19\nMean without missing values: 3.8\n```\n:::\n:::\n\n\nIn this example:\n\n- `skipmissing(data)` returns an iterator that excludes `missing` values from the `data` array.\n- Using `sum(skipmissing(data))` and `mean(skipmissing(data))` allows us to calculate the sum and mean, respectively, without considering any `missing` entries.\n\nThe `skipmissing` function is especially useful when handling datasets with incomplete data, enabling accurate calculations without manually filtering out `missing` values.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Special Types in Julia\n\n\n\n::: {#6a7fb369 .cell execution_count=100}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=101}\n**Question 1. What does the `Nothing` type represent in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#df0a51aa .cell execution_count=101}\n\n::: {.cell-output .cell-output-display execution_count=102}\n```{=html}\n<script>\nvar ID = \"NpKpFXfh\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='NpKpFXfh'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_NpKpFXfh\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_NpKpFXfh_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_NpKpFXfh\"\n           id=\"radio_NpKpFXfh_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It is a placeholder for missing data.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_NpKpFXfh_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_NpKpFXfh\"\n           id=\"radio_NpKpFXfh_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It represents the absence of a meaningful value.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_NpKpFXfh_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_NpKpFXfh\"\n           id=\"radio_NpKpFXfh_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It is used for undefined variables.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_NpKpFXfh_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_NpKpFXfh\"\n           id=\"radio_NpKpFXfh_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It is a special type for numeric values.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='NpKpFXfh_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_NpKpFXfh').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_NpKpFXfh')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_NpKpFXfh\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('NpKpFXfh_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_NpKpFXfh\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_NpKpFXfh\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#40327348 .cell execution_count=102}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=103}\n**Question 2. What is the result of calling the following function in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\n# Example of a function that returns `Nothing`\nfunction print_message(msg::String)\n    println(msg)\n    return nothing  # Explicitly returns `nothing`\nend\n\nresult = print_message(\"Hello!\")\nprintln(result === nothing)  # Output: true\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#9bec20af .cell execution_count=103}\n\n::: {.cell-output .cell-output-display execution_count=104}\n```{=html}\n<script>\nvar ID = \"qNUq4ICR\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='qNUq4ICR'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_qNUq4ICR\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_qNUq4ICR_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_qNUq4ICR\"\n           id=\"radio_qNUq4ICR_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        The function returns a string &#39;nothing&#39;.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_qNUq4ICR_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_qNUq4ICR\"\n           id=\"radio_qNUq4ICR_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        <code>nothing</code> is returned and the output is true.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_qNUq4ICR_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_qNUq4ICR\"\n           id=\"radio_qNUq4ICR_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        <code>nothing</code> is returned but the output is false.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_qNUq4ICR_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_qNUq4ICR\"\n           id=\"radio_qNUq4ICR_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        The function throws an error because nothing cannot be returned.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='qNUq4ICR_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_qNUq4ICR').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_qNUq4ICR')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_qNUq4ICR\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('qNUq4ICR_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_qNUq4ICR\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_qNUq4ICR\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#64835b0e .cell execution_count=104}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=105}\n**Question 3. What is the advantage of using `Any` as a type in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\n# Example of using `Any` as a type\nfunction describe(value::Any)\n    println(\"Value: \", value)\n    println(\"Type: \", typeof(value))\nend\n\ndescribe(42)         # Works with Int\ndescribe(\"Hello\")    # Works with String\ndescribe(3.14)       # Works with Float64\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#f35b208a .cell execution_count=105}\n\n::: {.cell-output .cell-output-display execution_count=106}\n```{=html}\n<script>\nvar ID = \"zEqPdYSw\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='zEqPdYSw'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_zEqPdYSw\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zEqPdYSw_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zEqPdYSw\"\n           id=\"radio_zEqPdYSw_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It prevents runtime errors related to data types.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zEqPdYSw_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zEqPdYSw\"\n           id=\"radio_zEqPdYSw_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It makes type inference more precise.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zEqPdYSw_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zEqPdYSw\"\n           id=\"radio_zEqPdYSw_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It allows variables to hold any type, making the code flexible.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_zEqPdYSw_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_zEqPdYSw\"\n           id=\"radio_zEqPdYSw_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It increases performance by restricting the type of variable.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='zEqPdYSw_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_zEqPdYSw').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_zEqPdYSw')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_zEqPdYSw\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('zEqPdYSw_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_zEqPdYSw\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_zEqPdYSw\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#8103a8fa .cell execution_count=106}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=107}\n**Question 4. What does the following code do in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\ndata = [1, 2, missing, 4, 5]\nfor item in data\n    if item === missing\n        println(\"Missing data detected.\")\n    else\n        println(\"Value: \", item)\n    end\nend\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#5dcd1ee8 .cell execution_count=107}\n\n::: {.cell-output .cell-output-display execution_count=108}\n```{=html}\n<script>\nvar ID = \"prqrx7nR\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='prqrx7nR'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_prqrx7nR\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_prqrx7nR_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_prqrx7nR\"\n           id=\"radio_prqrx7nR_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It sums all the values and skips missing ones.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_prqrx7nR_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_prqrx7nR\"\n           id=\"radio_prqrx7nR_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It replaces missing data with a default value.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_prqrx7nR_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_prqrx7nR\"\n           id=\"radio_prqrx7nR_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It checks for missing values and prints a message for each.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_prqrx7nR_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_prqrx7nR\"\n           id=\"radio_prqrx7nR_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It throws an error when encountering missing data.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='prqrx7nR_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_prqrx7nR').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_prqrx7nR')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_prqrx7nR\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('prqrx7nR_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_prqrx7nR\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_prqrx7nR\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#b0bfa4d2 .cell execution_count=108}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=109}\n**Question 5. What is the purpose of the `skipmissing` function in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nusing Statistics\n\n# Example array with missing values\ndata = [1, 2, missing, 4, 5, missing, 7]\n\n# Summing values while skipping missing entries\nsum_no_missing = sum(skipmissing(data))\nprintln(\"Sum without missing values: \", sum_no_missing)  # Output: 19\n\n# Calculating the mean while skipping missing values\nmean_no_missing = mean(skipmissing(data))\nprintln(\"Mean without missing values: \", mean_no_missing)  # Output: 3.8\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#dea1a5cd .cell execution_count=109}\n\n::: {.cell-output .cell-output-display execution_count=110}\n```{=html}\n<script>\nvar ID = \"gXFgTrwZ\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='gXFgTrwZ'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_gXFgTrwZ\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_gXFgTrwZ_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_gXFgTrwZ\"\n           id=\"radio_gXFgTrwZ_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It raises an error if <code>missing</code> values are encountered.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_gXFgTrwZ_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_gXFgTrwZ\"\n           id=\"radio_gXFgTrwZ_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It creates an iterator that skips <code>missing</code> values during computations.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_gXFgTrwZ_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_gXFgTrwZ\"\n           id=\"radio_gXFgTrwZ_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It replaces <code>missing</code> values with <code>0</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_gXFgTrwZ_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_gXFgTrwZ\"\n           id=\"radio_gXFgTrwZ_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It prints out the number of <code>missing</code> values.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='gXFgTrwZ_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_gXFgTrwZ').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_gXFgTrwZ')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_gXFgTrwZ\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('gXFgTrwZ_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_gXFgTrwZ\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_gXFgTrwZ\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#36244ddf .cell execution_count=110}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=111}\n**Question 6. What is the main use of the `Missing` type in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\n# Example of using `missing` in an array\ndata = [1, 2, missing, 4, 5]\n\n# Check for missing values in the array\nfor item in data\n    if item === missing\n        println(\"Missing data detected.\")\n    else\n        println(\"Value: \", item)\n    end\nend\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#18661c78 .cell execution_count=111}\n\n::: {.cell-output .cell-output-display execution_count=112}\n```{=html}\n<script>\nvar ID = \"IJnnx9Of\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='IJnnx9Of'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_IJnnx9Of\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IJnnx9Of_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IJnnx9Of\"\n           id=\"radio_IJnnx9Of_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        To represent variables with no value assigned.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IJnnx9Of_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IJnnx9Of\"\n           id=\"radio_IJnnx9Of_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        To prevent errors when dealing with <code>Nothing</code>.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IJnnx9Of_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IJnnx9Of\"\n           id=\"radio_IJnnx9Of_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        To represent missing or unknown data in a collection.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_IJnnx9Of_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_IJnnx9Of\"\n           id=\"radio_IJnnx9Of_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        To hold any type of data including missing entries.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='IJnnx9Of_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_IJnnx9Of').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_IJnnx9Of')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_IJnnx9Of\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('IJnnx9Of_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_IJnnx9Of\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_IJnnx9Of\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n:::\n\n## Errors and Exception Handling\n\nJulia provides a powerful framework for managing and [handling errors](https://docs.julialang.org/en/v1/manual/control-flow/#Exception-Handling), which helps in writing robust programs. Error handling in Julia involves various built-in error types and mechanisms, including `throw` for raising errors and `try`/`catch` blocks for handling exceptions.\n\n### Common Error Types in Julia\n\nJulia has several built-in error types that are commonly used:\n\n- **`ArgumentError`**: Raised when a function receives an argument that is inappropriate or out of expected range.\n- **`BoundsError`**: Occurs when trying to access an index that is out of bounds for an array or collection.\n- **`DivideError`**: Raised when division by zero is attempted.\n- **`DomainError`**: Raised when a mathematical function is called with an argument outside its domain. For instance, taking the square root of a negative number.\n- **`MethodError`**: Occurs when a method is called with incorrect arguments or types.\n\n### Raising Errors with `throw`\n\nIn Julia, you can explicitly raise an error using the `throw` function. This is useful for defining custom error conditions in your code. To throw an error, call `throw` with an instance of an error type:\n\n::: {#b728adb4 .cell execution_count=112}\n``` {.julia .cell-code}\nfunction divide(a, b)\n    if b == 0\n        throw(DivideError())\n    end\n    return a / b\nend\n\ndivide(10, 0)  # Will raise a DivideError\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>DivideError: integer division error\n\nStacktrace:\n [1] <span class=\"ansi-bold\">divide</span><span class=\"ansi-bold\">(</span><span class=\"ansi-bright-black-fg\">a</span>::Int64, <span class=\"ansi-bright-black-fg\">b</span>::Int64<span class=\"ansi-bold\">)</span>\n<span class=\"ansi-bright-black-fg\">   @</span> <span class=\"ansi-magenta-fg\">Main</span> <span class=\"ansi-bright-black-fg\">./</span><span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">In[113]:3</span>\n [2] top-level scope\n<span class=\"ansi-bright-black-fg\">   @</span> <span style=\"text-decoration:underline\" class=\"ansi-bright-black-fg\">In[113]:8</span></pre>\n```\n:::\n\n:::\n:::\n\n\nIn this example, the function `divide` will throw a `DivideError` if the second argument `b` is zero, making the function safer and more robust.\n\n### Handling Errors with `try`/`catch`\n\nJulia provides `try`/`catch` blocks for managing exceptions gracefully. Code within a `try` block runs until an error is encountered. If an error is thrown, control passes to the `catch` block, where you can handle the error.\n\nHere’s an example of using `try`/`catch` with the `divide` function:\n\n::: {#bf1d8596 .cell execution_count=113}\n``` {.julia .cell-code}\ntry\n    println(divide(10, 0))  # Will raise an error\ncatch e\n    println(\"Error: \", e)  # Handles the error\nend\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nError: DivideError()\n```\n:::\n:::\n\n\nIn this example:\n\n- If `divide(10, 0)` raises an error, the program catches it and prints a custom message instead of stopping execution.\n- The variable `e` holds the error, which can be printed or used for further handling.\n\n### Using `finally` for Cleanup\n\nIn Julia, `finally` is a block used in conjunction with `try` and `catch` to ensure that certain cleanup actions are executed regardless of whether an error occurs or not. This is useful for tasks like closing files, releasing resources, or resetting variables that need to be done after the execution of a `try-catch` block.\n\nThe code inside the `finally` block is always executed, even if an exception is thrown and caught. This makes it ideal for situations where you need to guarantee that some actions occur after the main code runs, like resource deallocation.\n\n#### Syntax:\n\n::: {#70d3bff2 .cell execution_count=114}\n``` {.julia .cell-code}\ntry\n    # Code that might throw an error\ncatch exception\n    # Code to handle the error\nfinally\n    # Cleanup code that will always run\nend\n```\n:::\n\n\n#### Example:\n\n::: {#c09fa884 .cell execution_count=115}\n``` {.julia .cell-code}\nfunction safe_file_read(filename::String)\n    file = nothing\n    try\n        file = open(filename, \"r\")\n        data = read(file, String)\n        return data\n    catch e\n        println(\"An error occurred: \", e)\n    finally\n        if file !== nothing\n            close(file)\n            println(\"File closed.\")\n        end\n    end\nend\n\n# Test with a valid file\nprintln(safe_file_read(\"example.txt\"))\n\n# Test with an invalid file\nprintln(safe_file_read(\"nonexistent.txt\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn error occurred: SystemError(\"opening file \\\"example.txt\\\"\", 2, nothing)\nnothing\nAn error occurred: SystemError(\"opening file \\\"nonexistent.txt\\\"\", 2, nothing)\nnothing\n```\n:::\n:::\n\n\n#### Explanation:\n- The `finally` block ensures that the file is always closed after reading, even if an error occurs (e.g., file not found, read error).\n- If the `open` operation is successful, the `finally` block will still execute and close the file, ensuring proper resource management.\n- If an exception is thrown in the `try` block (like a non-existent file), it will be caught and handled by the `catch` block, but the `finally` block will still execute to close the file (if opened).\n\n#### Use Cases for `finally`:\n- Closing files or network connections.\n- Releasing resources (e.g., database connections, locks).\n- Resetting the program state to a known clean state.\n\n### Quiz\n\n::: {.callout-caution collapse=\"true\" icon=false}\n## Quiz: Errors and Exception Handling in Julia\n\n\n\n::: {#233f1d8c .cell execution_count=117}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=118}\n**Question 1. Which error type is raised when an index is out of bounds in an array?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#2bc746d7 .cell execution_count=118}\n\n::: {.cell-output .cell-output-display execution_count=119}\n```{=html}\n<script>\nvar ID = \"xPcUZBsj\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='xPcUZBsj'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_xPcUZBsj\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_xPcUZBsj_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_xPcUZBsj\"\n           id=\"radio_xPcUZBsj_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        BoundsError\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_xPcUZBsj_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_xPcUZBsj\"\n           id=\"radio_xPcUZBsj_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        ArgumentError\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_xPcUZBsj_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_xPcUZBsj\"\n           id=\"radio_xPcUZBsj_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        DivisionByZeroError\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_xPcUZBsj_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_xPcUZBsj\"\n           id=\"radio_xPcUZBsj_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        IOError\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='xPcUZBsj_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_xPcUZBsj').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_xPcUZBsj')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_xPcUZBsj\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('xPcUZBsj_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_xPcUZBsj\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_xPcUZBsj\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#515cb02f .cell execution_count=119}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=120}\n**Question 2. What does the following code do in Julia?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction divide(a, b)\n    if b == 0\n        throw(DivideError())\n    end\n    return a / b\nend\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#388dff22 .cell execution_count=120}\n\n::: {.cell-output .cell-output-display execution_count=121}\n```{=html}\n<script>\nvar ID = \"ecm9WeoS\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='ecm9WeoS'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_ecm9WeoS\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ecm9WeoS_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ecm9WeoS\"\n           id=\"radio_ecm9WeoS_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        It throws a BoundsError if a or b are not numbers.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ecm9WeoS_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ecm9WeoS\"\n           id=\"radio_ecm9WeoS_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        It performs division and returns the result.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ecm9WeoS_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ecm9WeoS\"\n           id=\"radio_ecm9WeoS_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        It raises a DivideError when b equals 0.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ecm9WeoS_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ecm9WeoS\"\n           id=\"radio_ecm9WeoS_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        It raises an ArgumentError when a or b is invalid.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='ecm9WeoS_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_ecm9WeoS').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_ecm9WeoS')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_ecm9WeoS\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('ecm9WeoS_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_ecm9WeoS\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_ecm9WeoS\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#ba4325f0 .cell execution_count=121}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=122}\n**Question 3. What happens when the following `try`/`catch` block is executed?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\ntry\n    println(divide(10, 0))  # Will raise an error\ncatch e\n    println(\"Error: \", e)  # Handles the error\nend\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#0fb77282 .cell execution_count=122}\n\n::: {.cell-output .cell-output-display execution_count=123}\n```{=html}\n<script>\nvar ID = \"LDhxfmne\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='LDhxfmne'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_LDhxfmne\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_LDhxfmne_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_LDhxfmne\"\n           id=\"radio_LDhxfmne_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program silently ignores the error.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_LDhxfmne_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_LDhxfmne\"\n           id=\"radio_LDhxfmne_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        The error is caught and a custom error message is printed.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_LDhxfmne_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_LDhxfmne\"\n           id=\"radio_LDhxfmne_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program prints the result of the division.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_LDhxfmne_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_LDhxfmne\"\n           id=\"radio_LDhxfmne_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program throws an error and stops execution.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='LDhxfmne_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_LDhxfmne').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_LDhxfmne')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_LDhxfmne\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('LDhxfmne_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_LDhxfmne\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_LDhxfmne\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#415d330c .cell execution_count=123}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=124}\n**Question 4. What is the purpose of the `finally` block in Julia's exception handling?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#674bd9f1 .cell execution_count=124}\n\n::: {.cell-output .cell-output-display execution_count=125}\n```{=html}\n<script>\nvar ID = \"BZajzlLW\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='BZajzlLW'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_BZajzlLW\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_BZajzlLW_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_BZajzlLW\"\n           id=\"radio_BZajzlLW_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        To catch all errors and handle them.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_BZajzlLW_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_BZajzlLW\"\n           id=\"radio_BZajzlLW_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        To perform the main logic of the program.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_BZajzlLW_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_BZajzlLW\"\n           id=\"radio_BZajzlLW_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        To rethrow any errors that are caught.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_BZajzlLW_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_BZajzlLW\"\n           id=\"radio_BZajzlLW_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        To ensure that cleanup code runs regardless of whether an error occurs.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='BZajzlLW_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_BZajzlLW').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_BZajzlLW')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_BZajzlLW\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('BZajzlLW_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_BZajzlLW\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_BZajzlLW\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#71fcfcd9 .cell execution_count=125}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=126}\n**Question 5. What is the output of the following code?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-30px\"> </p>\n\n```julia\nfunction safe_file_read(filename::String)\n    file = nothing\n    try\n        file = open(filename, \"r\")\n        data = read(file, String)\n        return data\n    catch e\n        println(\"An error occurred: \", e)\n    finally\n        if file !== nothing\n            close(file)\n            println(\"File closed.\")\n        end\n    end\nend\n\n# Test with a valid file\nprintln(safe_file_read(\"example.txt\"))\n\n# Test with an invalid file\nprintln(safe_file_read(\"nonexistent.txt\"))\n```\n\n<p style=\"margin-top:-20px\"> </p>\n\n::: {#f176a873 .cell execution_count=126}\n\n::: {.cell-output .cell-output-display execution_count=127}\n```{=html}\n<script>\nvar ID = \"ZqI6HNH6\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='ZqI6HNH6'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_ZqI6HNH6\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ZqI6HNH6_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ZqI6HNH6\"\n           id=\"radio_ZqI6HNH6_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program tries to read a file, catches errors, and always closes the file.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ZqI6HNH6_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ZqI6HNH6\"\n           id=\"radio_ZqI6HNH6_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program prints the error but skips file closing.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ZqI6HNH6_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ZqI6HNH6\"\n           id=\"radio_ZqI6HNH6_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program prints data from the file and closes it.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_ZqI6HNH6_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_ZqI6HNH6\"\n           id=\"radio_ZqI6HNH6_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        The program raises an error and does not close the file.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='ZqI6HNH6_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_ZqI6HNH6').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_ZqI6HNH6')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_ZqI6HNH6\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('ZqI6HNH6_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_ZqI6HNH6\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_ZqI6HNH6\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n::: {#58f198d6 .cell execution_count=127}\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=128}\n**Question 6. Which of the following is an appropriate use case for the `finally` block?**\n\n:::\n:::\n\n\n<p style=\"margin-top:-50px\"> </p>\n\n::: {#ca00b702 .cell execution_count=128}\n\n::: {.cell-output .cell-output-display execution_count=129}\n```{=html}\n<script>\nvar ID = \"8JnS4gic\"\n</script>\n<form class=\"mx-2 my-3 mw-100 qqquestion\"\n      name='WeaveQuestion'\n      data-id='8JnS4gic'\n      data-controltype=''\n      onSubmit='return false;'\n      >\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_8JnS4gic\" correct='-1' attempts='0'>\n\n    <div style=\"padding-top: 5px\">\n    <fieldset style=\"border:0px\">\n<legend style=\"display: none\"\n        aria-label=\"Select an item\">Select an item</legend>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8JnS4gic_1\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8JnS4gic\"\n           id=\"radio_8JnS4gic_1\"\n           value=\"1\">\n    </input>\n    <span class=\"label-body px-1\">\n        Ensuring a file is closed after reading, regardless of errors.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8JnS4gic_2\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8JnS4gic\"\n           id=\"radio_8JnS4gic_2\"\n           value=\"2\">\n    </input>\n    <span class=\"label-body px-1\">\n        To prevent specific types of errors from being raised.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8JnS4gic_3\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8JnS4gic\"\n           id=\"radio_8JnS4gic_3\"\n           value=\"3\">\n    </input>\n    <span class=\"label-body px-1\">\n        To catch all exceptions without handling them.\n    </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label qqradio\"\n           for=\"radio_8JnS4gic_4\">\n    <input class=\"form-check-input\"\n           type=\"radio\"\n           name=\"radio_8JnS4gic\"\n           id=\"radio_8JnS4gic_4\"\n           value=\"4\">\n    </input>\n    <span class=\"label-body px-1\">\n        To handle errors and return a value from the <code>finally</code> block.\n    </span>\n    </label>\n</div>\n</fieldset>\n\n         </div>\n    </div>\n    <div id='8JnS4gic_message'\n         class='qqmessage'\n         style=\"padding-bottom: 15px\">\n    </div>\n</form>\n<script>\ndocument.getElementById('controls_8JnS4gic').addEventListener(\"quizquestion_answer\", (e) => {\n\t      var o = document.getElementById('controls_8JnS4gic')\n\t      var atts = Number(o.getAttribute(\"attempts\"))\n\t      o.setAttribute(\"correct\",  e.detail.correct);\n\t      o.setAttribute(\"attempts\", atts + 1)\n\t  }, true)\n</script>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_8JnS4gic\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('8JnS4gic_message');\n    \n  if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'> <span>✔&nbsp; Correct </span> </div>\";\n    var explanation = document.getElementById(\"explanation_8JnS4gic\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n      const correct_answer   = new CustomEvent(\"quizquestion_answer\",\n          {bubbles:true, detail:{correct: 1}}\n  );\n  this.dispatchEvent(correct_answer);\n\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'> <span>Χ&nbsp; Incorrect </span> </div>\";\n    var explanation = document.getElementById(\"explanation_8JnS4gic\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n      const incorrect_answer = new CustomEvent(\"quizquestion_answer\",\n           {bubbles:true, detail:{correct: 0}}\n  );\n  this.dispatchEvent(incorrect_answer);\n\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "advanced-types_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}